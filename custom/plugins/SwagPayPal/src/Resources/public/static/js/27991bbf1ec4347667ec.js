(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[503],{143:function(){},5385:function(){Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"swag_paypal",key:"swag_paypal_disputes",roles:{viewer:{privileges:["sales_channel:read"],dependencies:[]}}})},9503:function(e,t,s){"use strict";s.r(t),s(5385),s(2727),Shopware.Component.register("swag-paypal-disputes-detail",()=>s.e(583).then(s.bind(s,9583))),Shopware.Component.register("swag-paypal-disputes-list",()=>Promise.resolve().then(s.bind(s,2727))),Shopware.Module.register("swag-paypal-disputes",{type:"plugin",name:"paypal-disputes",title:"swag-paypal-disputes.general.mainMenuItemGeneral",description:"swag-paypal-disputes.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#F88962",icon:"regular-comments",favicon:"icon-module-customers.png",routes:{index:{component:"swag-paypal-disputes-list",path:"index",meta:{privilege:"swag_paypal_disputes.viewer"}},detail:{component:"swag-paypal-disputes-detail",path:"detail/:disputeId/:salesChannelId?",props:{default(e){return{disputeId:e.params.disputeId,salesChannelId:e.params.salesChannelId}}},meta:{privilege:"swag_paypal_disputes.viewer",parentPath:"swag.paypal.disputes.index"}}},navigation:[{id:"swag-paypal-disputes",path:"swag.paypal.disputes.index",label:"swag-paypal-disputes.general.mainMenuItemGeneral",parent:"sw-customer",privilege:"swag_paypal_disputes.viewer"}]})},2727:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return c}});let a="REQUIRED_ACTION",n="REQUIRED_OTHER_PARTY_ACTION",i="UNDER_PAYPAL_REVIEW",l="RESOLVED",p="OPEN_INQUIRIES",r="APPEALABLE";s(5624);let{Filter:o}=Shopware,{debounce:d}=Shopware.Utils,{capitalizeString:u}=Shopware.Utils.string;var c=Shopware.Component.wrapComponentConfig({template:'{% block swag_paypal_disputes_list %}\n<sw-page class="swag-paypal-disputes-list">\n\n    {% block swag_paypal_disputes_list_smart_bar_header %}\n    <template #smart-bar-header>\n\n        {% block swag_paypal_disputes_list_smart_bar_header_title %}\n        <h2>\n\n            {% block swag_paypal_disputes_list_smart_bar_header_title_text %}\n            {{ $tc(\'swag-paypal-disputes.list.title\') }}\n            {% endblock %}\n\n            {% block swag_paypal_disputes_list_smart_bar_header_amount %}\n            <template v-if="!isLoading">\n                ({{ total }})\n            </template>\n            {% endblock %}\n\n        </h2>\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n\n    {% block swag_paypal_disputes_list_content %}\n    <template #content>\n        <sw-loader v-if="isLoading"/>\n        <template v-else>\n\n            {% block swag_paypal_disputes_list_content_grid %}\n            <sw-data-grid\n                v-if="disputes.length > 0"\n                :dataSource="visibleDisputes"\n                :columns="disputesColumns"\n                :showActions="false"\n                :showSelection="false"\n            >\n\n                {% block swag_paypal_disputes_list_content_grid_column_update_time %}\n                <template #column-update_time="{ item }">\n                    <div>\n                        <div>{{ formatUpdateDate(item.update_time) }}</div>\n                        <div>{{ formatUpdateTime(item.update_time) }}</div>\n                    </div>\n                </template>\n                {% endblock %}\n\n\n                {% block swag_paypal_disputes_list_content_grid_column_seller_response_due_date %}\n                <template #column-response_due_date="{ item }">\n                    <template v-if="item.seller_response_due_date">\n                        <strong>{{ $tc(\'swag-paypal-disputes.common.response_due_date.seller\') }}</strong>:\n                        {{ formatDate(item.seller_response_due_date) }}\n                    </template>\n                    <template v-else-if="item.buyer_response_due_date">\n                        <strong>{{ $tc(\'swag-paypal-disputes.common.response_due_date.buyer\') }}</strong>:\n                        {{ formatDate(item.buyer_response_due_date) }}\n                    </template>\n                </template>\n                {% endblock %}\n\n                {% block swag_paypal_disputes_list_content_grid_column_status %}\n                <template #column-status="{ item }">\n                    <div>\n                        <div>\n                            {{ formatTechnicalText(item.dispute_state) }}\n                            <template v-if="item.dispute_state !== item.status">\n                                ({{ formatTechnicalText(item.status) }})\n                            </template>\n                        </div>\n                        <div class="swag-paypal-disputes-list__reason">\n                            {{ formatTechnicalText(item.reason) }}\n                        </div>\n                    </div>\n                </template>\n                {% endblock %}\n\n                {% block swag_paypal_disputes_list_content_grid_column_dispute_id %}\n                <template #column-dispute_id="{ item }">\n                    <router-link\n                        :to="{ name: \'swag.paypal.disputes.detail\', params: { disputeId: item.dispute_id , salesChannelId} }"\n                    >\n                        {{ item.dispute_id }}\n                    </router-link>\n                </template>\n                {% endblock %}\n\n                {% block swag_paypal_disputes_list_content_grid_column_dispute_life_cycle_stage %}\n                <template #column-dispute_life_cycle_stage="{ item }">\n                    <div\n                        v-if="item.dispute_life_cycle_stage === \'INQUIRY\'"\n                         class="swag-paypal-disputes-list__stage-inquiry"\n                    >\n                        {{ formatTechnicalText(item.dispute_life_cycle_stage) }}\n                    </div>\n                    <div\n                        v-else\n                        class="swag-paypal-disputes-list__stage-other"\n                    >\n                        {{ formatTechnicalText(item.dispute_life_cycle_stage) }}\n                    </div>\n                </template>\n                {% endblock %}\n\n                {% block swag_paypal_disputes_list_content_grid_column_dispute_amount %}\n                <template #column-dispute_amount="{ item }">\n                    {{ item.dispute_amount.value }} {{ item.dispute_amount.currency_code }}\n                </template>\n                {% endblock %}\n\n                {% block swag_paypal_disputes_list_content_grid_pagination %}\n                <template #pagination>\n                    <sw-pagination\n                        :page="page"\n                        :limit="limit"\n                        :total="total"\n                        @page-change="onPageChange"\n                    />\n                </template>\n                {% endblock %}\n\n            </sw-data-grid>\n            {% endblock %}\n\n            {% block swag_paypal_disputes_list_content_empty_state %}\n                <sw-empty-state\n                    v-if="notAuthorized"\n                    :title="$tc(\'swag-paypal-disputes.list.emptyStateNotAuthorized.title\')"\n                    icon="regular-exclamation-triangle"\n                    color="#F88962"\n                >\n                    <i18n-t\n                        tag="p"\n                        keypath="swag-paypal-disputes.list.emptyStateNotAuthorized.subline"\n                    >\n                        <template #link>\n                            <sw-internal-link\n                                :routerLink="{ name: \'sw.settings.payment.overview\' }"\n                                :inline="true"\n                                :hideIcon="true"\n                            >\n                                {{ $tc(\'swag-paypal-disputes.list.emptyStateNotAuthorized.link\') }}\n                            </sw-internal-link>\n                        </template>\n                    </i18n-t>\n                </sw-empty-state>\n\n                <sw-empty-state\n                    v-else-if="showEmptyStateWithNoDisputes"\n                    :title="$tc(\'swag-paypal-disputes.list.emptyState.title\')"\n                    :subline="$tc(\'swag-paypal-disputes.list.emptyState.subline\')"\n                    icon="regular-comments"\n                    color="#F88962"\n                />\n            {% endblock %}\n\n        </template>\n    </template>\n    {% endblock %}\n\n    {% block swag_paypal_disputes_list_sidebar %}\n    <template #sidebar>\n        <sw-sidebar class="swag-paypal-disputes-list__sidebar">\n\n            {% block swag_paypal_disputes_list_sidebar_refresh %}\n            <sw-sidebar-item\n                icon="regular-sync"\n                :title="$tc(\'swag-paypal-disputes.list.titleSidebarItemRefresh\')"\n                @click="onRefresh"\n            />\n            {% endblock %}\n\n            {% block swag_paypal_disputes_list_sidebar_filter %}\n            <sw-sidebar-item\n                icon="regular-filter"\n                :title="$tc(\'swag-paypal-disputes.list.titleSidebarItemFilter\')"\n            >\n\n                {% block swag_paypal_disputes_list_sidebar_filter_items %}\n                    {% block swag_paypal_disputes_list_sidebar_filter_sales_channel %}\n                    <sw-sales-channel-switch\n                        :label="$tc(\'sw-settings.system-config.labelSalesChannelSelect\')"\n                        @change-sales-channel-id="onSalesChannelChanged"\n                    />\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_list_sidebar_filter_dispute_state %}\n                    <sw-multi-select\n                        :label="$tc(\'swag-paypal-disputes.common.status\')"\n                        :options="disputeStates"\n                        :value="disputeStateFilter"\n                        @update:value="onChangeDisputeStateFilter"\n                    />\n                    {% endblock %}\n                {% endblock %}\n\n            </sw-sidebar-item>\n            {% endblock %}\n\n        </sw-sidebar>\n    </template>\n    {% endblock %}\n\n</sw-page>\n{% endblock %}\n',inject:["SwagPayPalDisputeApiService","systemConfigApiService"],mixins:[Shopware.Mixin.getByName("swag-paypal-notification")],data(){return{isLoading:!1,notAuthorized:!1,disputes:[],disputeStates:[{value:a,label:this.formatTechnicalText(a)},{value:n,label:this.formatTechnicalText(n)},{value:i,label:this.formatTechnicalText(i)},{value:l,label:this.formatTechnicalText(l)},{value:p,label:this.formatTechnicalText(p)},{value:r,label:this.formatTechnicalText(r)}],disputeStateFilter:[],salesChannelId:null,total:0,limit:10,page:1,resolutionCenterUrl:"https://www.paypal.com/resolutioncenter"}},computed:{dateFilter(){return o.getByName("date")},showEmptyStateWithNoDisputes(){return!this.notAuthorized&&0===this.disputes.length},disputesColumns(){return[{property:"dispute_id",label:this.$tc("swag-paypal-disputes.common.dispute_id")},{property:"update_time",label:this.$tc("swag-paypal-disputes.common.update_time")},{property:"response_due_date",label:this.$tc("swag-paypal-disputes.common.response_due_date.label")},{property:"status",label:this.$tc("swag-paypal-disputes.common.status")},{property:"dispute_life_cycle_stage",label:this.$tc("swag-paypal-disputes.common.dispute_life_cycle_stage")},{property:"dispute_amount",label:this.$tc("swag-paypal-disputes.common.dispute_amount")}]},visibleDisputes(){return this.disputes.slice((this.page-1)*this.limit,(this.page-1)*this.limit+this.limit)}},created(){this.createdComponent()},methods:{async createdComponent(){this.isLoading=!0,(await this.systemConfigApiService.getValues("SwagPayPal.settings"))["SwagPayPal.settings.sandbox"]&&(this.resolutionCenterUrl="https://www.sandbox.paypal.com/resolutioncenter"),this.getList()},getList(){this.isLoading=!0,this.disputes=[];let e=this.disputeStateFilter.join(",")||null;this.SwagPayPalDisputeApiService.list(this.salesChannelId,e).then(e=>{null!==e.items&&(this.disputes=this.sortDisputes(e.items)),this.total=this.disputes.length,this.isLoading=!1}).catch(this.handleError.bind(this))},sortDisputes(e){return e.sort((e,t)=>"RESOLVED"===e.status?1:"RESOLVED"===t.status?-1:0)},debouncedGetList:d(function(){this.getList()},850),handleError(e){e.response?.data.errors?.[0]?.code==="SWAG_PAYPAL__NOT_AUTHORIZED"?this.notAuthorized=!0:this.createNotificationFromError({errorResponse:e,title:"swag-paypal-disputes.list.errorTitle"}),this.isLoading=!1},formatUpdateDate(e){return this.formatDate(e,{})},formatUpdateTime(e){return this.formatDate(e,{day:void 0,month:void 0,year:void 0,hour:"2-digit",minute:"2-digit",second:"2-digit"})},formatTechnicalText(e){return u(e).replace(/_/g," ")},onPageChange({page:e,limit:t}){this.page=e,this.limit=t,this.$emit("page-change")},onRefresh(){this.getList()},onChangeDisputeStateFilter(e){this.disputeStateFilter=e,this.debouncedGetList()},onSalesChannelChanged(e){this.salesChannelId=e,this.getList()},getExternalDetailPageLink(e){return`${this.resolutionCenterUrl}/${e.dispute_id??""}`},formatDate(e,t={hour:"2-digit",minute:"2-digit",second:"2-digit"}){return this.dateFilter(e,t)}}})},5624:function(e,t,s){var a=s(143);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),s(5346).Z("1e4d8a6c",a,!0,{})},5346:function(e,t,s){"use strict";function a(e,t){for(var s=[],a={},n=0;n<t.length;n++){var i=t[n],l=i[0],p={id:e+":"+n,css:i[1],media:i[2],sourceMap:i[3]};a[l]?a[l].parts.push(p):s.push(a[l]={id:l,parts:[p]})}return s}s.d(t,{Z:function(){return m}});var n="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!n)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},l=n&&(document.head||document.getElementsByTagName("head")[0]),p=null,r=0,o=!1,d=function(){},u=null,c="data-vue-ssr-id",_="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function m(e,t,s,n){o=s,u=n||{};var l=a(e,t);return g(l),function(t){for(var s=[],n=0;n<l.length;n++){var p=i[l[n].id];p.refs--,s.push(p)}t?g(l=a(e,t)):l=[];for(var n=0;n<s.length;n++){var p=s[n];if(0===p.refs){for(var r=0;r<p.parts.length;r++)p.parts[r]();delete i[p.id]}}}}function g(e){for(var t=0;t<e.length;t++){var s=e[t],a=i[s.id];if(a){a.refs++;for(var n=0;n<a.parts.length;n++)a.parts[n](s.parts[n]);for(;n<s.parts.length;n++)a.parts.push(y(s.parts[n]));a.parts.length>s.parts.length&&(a.parts.length=s.parts.length)}else{for(var l=[],n=0;n<s.parts.length;n++)l.push(y(s.parts[n]));i[s.id]={id:s.id,refs:1,parts:l}}}}function h(){var e=document.createElement("style");return e.type="text/css",l.appendChild(e),e}function y(e){var t,s,a=document.querySelector("style["+c+'~="'+e.id+'"]');if(a){if(o)return d;a.parentNode.removeChild(a)}if(_){var n=r++;t=f.bind(null,a=p||(p=h()),n,!1),s=f.bind(null,a,n,!0)}else t=b.bind(null,a=h()),s=function(){a.parentNode.removeChild(a)};return t(e),function(a){a?(a.css!==e.css||a.media!==e.media||a.sourceMap!==e.sourceMap)&&t(e=a):s()}}var w=function(){var e=[];return function(t,s){return e[t]=s,e.filter(Boolean).join("\n")}}();function f(e,t,s,a){var n=s?"":a.css;if(e.styleSheet)e.styleSheet.cssText=w(t,n);else{var i=document.createTextNode(n),l=e.childNodes;l[t]&&e.removeChild(l[t]),l.length?e.insertBefore(i,l[t]):e.appendChild(i)}}function b(e,t){var s=t.css,a=t.media,n=t.sourceMap;if(a&&e.setAttribute("media",a),u.ssrId&&e.setAttribute(c,t.id),n&&(s+="\n/*# sourceURL="+n.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"),e.styleSheet)e.styleSheet.cssText=s;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(s))}}}}]);