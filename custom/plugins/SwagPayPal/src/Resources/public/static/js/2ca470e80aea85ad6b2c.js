(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[828],{76:function(){},7823:function(){},865:function(){},6716:function(){},8191:function(){},2726:function(){},7828:function(e,a,t){"use strict";t.r(a),t(8088);let{Component:n}=Shopware,r=Shopware.Utils;n.register("swag-paypal-payment-action-capture",{template:'{% block swag_paypal_payment_action_capture %}\n<sw-modal\n    variant="small"\n    :title="$tc(`swag-paypal-payment.modal.title.capture`)"\n    @modal-close="$emit(\'modal-close\')"\n>\n\n    {% block swag_paypal_payment_action_capture_max_amount %}\n    <sw-text-field\n        v-model:value="maxCaptureValue"\n        :label="$tc(\'swag-paypal-payment.captureAction.maxAmount\')"\n        :disabled="true"\n    />\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_capture_value %}\n    <sw-number-field\n        v-model:value="captureValue"\n        :max="maxCaptureValue"\n        :min="0"\n        :label="$tc(\'swag-paypal-payment.captureAction.currentAmount\')"\n    >\n        <template #suffix>\n            {{ currency }}\n        </template>\n    </sw-number-field>\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_capture_is_final_capture %}\n    <sw-checkbox-field\n        v-model:value="isFinalCapture"\n        :label="$tc(\'swag-paypal-payment.captureAction.isFinal\')"\n    />\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_capture_hint %}\n    <sw-alert v-if="showHint">\n        {{ $tc(\'swag-paypal-payment.captureAction.isFinalHint\') }}\n    </sw-alert>\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_capture_submit_button %}\n    <template #modal-footer>\n        <sw-button\n            variant="primary"\n            @click="capture"\n        >\n            {{ $tc(\'swag-paypal-payment.captureAction.button.text\') }}\n        </sw-button>\n    </template>\n    {% endblock %}\n\n    <sw-loader v-if="isLoading"/>\n</sw-modal>\n{% endblock %}\n',inject:["SwagPayPalPaymentService"],mixins:[Shopware.Mixin.getByName("notification")],props:{paymentResource:{type:Object,required:!0},maxCaptureValue:{type:Number,required:!0},orderId:{type:String,required:!0}},data(){return{isFinalCapture:!0,captureValue:this.maxCaptureValue,isLoading:!0,currency:this.paymentResource.transactions[0].amount.currency}},computed:{showHint(){return this.isFinalCapture&&this.captureValue!==this.maxCaptureValue}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!1},capture(){let e=this.captureValue,a=this.currency,t=this.isFinalCapture,n=this.paymentResource.intent,i=this.getResourceId(this.paymentResource);this.isLoading=!0,this.SwagPayPalPaymentService.capturePayment(this.orderId,n,i,e,a,t).then(()=>{this.createNotificationSuccess({message:this.$tc("swag-paypal-payment.captureAction.successMessage")}),this.isLoading=!1,this.$emit("modal-close"),this.$nextTick(()=>{this.$router.replace(`${this.$route.path}?hash=${r.createId()}`)})}).catch(e=>{try{this.createNotificationError({message:`${e.response.data.errors[0].title}: ${e.response.data.errors[0].detail}`,autoClose:!1})}catch(a){this.createNotificationError({message:`${e.title}: ${e.message}`,autoClose:!1})}finally{this.isLoading=!1}})},getResourceId(e){let a=null;return e.transactions[0].related_resources.forEach(e=>{e.authorization&&(a=e.authorization.id),e.order&&(a=e.order.id)}),a}}});let i="refunded",s="completed",o="capture",l="sale",{Component:p,Filter:d}=Shopware,c=Shopware.Utils;p.register("swag-paypal-payment-action-refund",{template:'{% block swag_paypal_payment_action_refund %}\n<sw-modal\n    variant="small"\n    :title="$tc(`swag-paypal-payment.modal.title.refund`)"\n    @modal-close="$emit(\'modal-close\')"\n>\n\n    {% block swag_paypal_payment_action_refund_invoice_select %}\n    <sw-select-field\n        v-model:value="selectedCaptureId"\n        :label="$tc(\'swag-paypal-payment.refundAction.invoiceSelect.label\')"\n        @update:value="preserveCapture"\n    >\n        <option v-for="capture in captures" :value="capture.id">\n            {{ capture.label }}\n        </option>\n    </sw-select-field>\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_refund_invoice_number %}\n    <swag-paypal-text-field\n        v-model:value="refundInvoiceNumber"\n        maxLength="127"\n        :label="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.label\')"\n        :placeholder="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.placeholder\')"\n    />\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_refund_reason %}\n    <swag-paypal-text-field\n        v-model:value="refundReason"\n        maxLength="30"\n        :label="$tc(\'swag-paypal-payment.refundAction.refundReason.label\')"\n        :placeholder="$tc(\'swag-paypal-payment.refundAction.refundReason.placeholder\')"\n    />\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_refund_amount %}\n    <sw-number-field\n        v-model:value="refundAmount"\n        :max="refundableAmount"\n        :min="0"\n        :label="$tc(\'swag-paypal-payment.refundAction.refundAmount.label\')"\n        :helpText="$tc(\'swag-paypal-payment.refundAction.refundAmount.helpText\')"\n    >\n        <template #suffix>\n            {{ selectedCapture.currency }}\n        </template>\n    </sw-number-field>\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_refund_description %}\n    <sw-textarea-field\n        v-model:value="refundDescription"\n        :placeholder="$tc(\'swag-paypal-payment.refundAction.refundDescription.placeholder\')"\n        :label="$tc(\'swag-paypal-payment.refundAction.refundDescription.label\')"\n    />\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_refund_confirm_button %}\n    <template #modal-footer>\n        <sw-button\n            variant="primary"\n            @click="refund"\n        >\n            {{ $tc(\'swag-paypal-payment.refundAction.confirmButton.text\') }}\n        </sw-button>\n    </template>\n    {% endblock %}\n\n    <sw-loader v-if="isLoading"/>\n</sw-modal>\n{% endblock %}\n',inject:["SwagPayPalPaymentService"],mixins:[Shopware.Mixin.getByName("notification")],props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data(){return{captures:[],selectedCapture:{},existingRefunds:[],refundAmount:0,refundableAmount:0,refundDescription:"",refundReason:"",refundInvoiceNumber:"",isLoading:!0,selectedCaptureId:""}},computed:{dateFilter(){return d.getByName("date")}},created(){this.createdComponent()},methods:{createdComponent(){this.getRefundableCaptures(),this.mapRefunds(),this.selectedCaptureId=this.captures[0].id,this.isLoading=!1,this.preserveCapture(),this.refundAmount=Number(this.captures[0].refundableAmount)},getRefundableCaptures(){let e=this.paymentResource.transactions[0].related_resources;this.captures=e.reduce((e,a)=>{if(a.sale){let t=a.sale;t.state!==i&&e.push(this.formatCapture(t,l))}if(a.capture){let t=a.capture;t.state!==i&&e.push(this.formatCapture(t,o))}return a.refund&&this.existingRefunds.push(a.refund),e},this.captures)},formatCapture(e,a){let t=this.dateFilter(e.create_time);return{label:`${t} (${e.amount.total} ${e.amount.currency}) - ${e.id} [${e.state}]`,id:e.id,refundableAmount:e.amount.total,currency:e.amount.currency,type:a}},mapRefunds(){this.existingRefunds.forEach(e=>{let a=this.captures.find(a=>{switch(a.type){case o:return e.capture_id===a.id;case l:return e.sale_id===a.id;default:return!1}});if(a){let t=Number(e.amount.total);t<0&&(t*=-1),a.refundableAmount-=t}})},preserveCapture(){let e=this.captures.find(e=>e.id===this.selectedCaptureId);this.selectedCapture=e,this.refundableAmount=Number(e.refundableAmount),this.refundAmount=Number(e.refundableAmount)},refund(){this.isLoading=!0;let e=this.refundAmount,a=this.refundDescription,t=this.selectedCapture.currency,n=this.selectedCapture.type,r=this.selectedCapture.id,i=this.refundReason,s=this.refundInvoiceNumber;0===e&&(e=this.refundableAmount),this.SwagPayPalPaymentService.refundPayment(this.orderId,n,r,e,t,a,i,s).then(()=>{this.createNotificationSuccess({message:this.$tc("swag-paypal-payment.refundAction.successMessage")}),this.isLoading=!1,this.$emit("modal-close"),this.$nextTick(()=>{this.$router.replace(`${this.$route.path}?hash=${c.createId()}`)})}).catch(e=>{try{this.createNotificationError({message:`${e.response.data.errors[0].title}: ${e.response.data.errors[0].detail}`,autoClose:!1})}catch(a){this.createNotificationError({message:`${e.title}: ${e.message}`,autoClose:!1})}finally{this.isLoading=!1}})}}});let{Component:u}=Shopware,m=Shopware.Utils;u.register("swag-paypal-payment-action-void",{template:'{% block swag_paypal_paymemnt_action_void %}\n<sw-modal\n    variant="small"\n    :title="$tc(`swag-paypal-payment.modal.title.void`)"\n    @modal-close="closeModal"\n>\n\n    {% block swag_paypal_paymemnt_action_void_headline %}\n    <p>{{ $tc(\'swag-paypal-payment.voidAction.confirm.message\') }}</p>\n    {% endblock %}\n\n    <template #modal-footer>\n\n        {% block swag_paypal_paymemnt_action_void_cancel_button %}\n        <sw-button @click="closeModal">\n            {{ $tc(\'global.default.no\') }}\n        </sw-button>\n        {% endblock %}\n\n        {% block swag_paypal_paymemnt_action_void_confirm_button %}\n        <sw-button variant="primary" @click="voidPayment">\n            {{ $tc(\'swag-paypal-payment.voidAction.confirm.button.confirm\') }}\n        </sw-button>\n        {% endblock %}\n\n    </template>\n\n    <sw-loader v-if="isLoading" size="43px" />\n</sw-modal>\n{% endblock %}\n',inject:["SwagPayPalPaymentService"],mixins:[Shopware.Mixin.getByName("notification")],props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data(){return{isLoading:!1}},methods:{voidPayment(){this.isLoading=!0;let e=this.paymentResource.intent,a=this.getResourceId(),t=this.$route.params.id;this.SwagPayPalPaymentService.voidPayment(this.orderId,e,a,t).then(()=>{this.createNotificationSuccess({message:this.$tc("swag-paypal-payment.voidAction.successMessage")}),this.isLoading=!1,this.closeModal(),this.$nextTick(()=>{this.$router.replace(`${this.$route.path}?hash=${m.createId()}`)})}).catch(e=>{try{this.createNotificationError({message:`${e.response.data.errors[0].title}: ${e.response.data.errors[0].detail}`,autoClose:!1})}catch(a){this.createNotificationError({message:`${e.title}: ${e.message}`,autoClose:!1})}finally{this.isLoading=!1}})},getResourceId(){let e=this.paymentResource.transactions[0].related_resources[0];return e.order?e.order.id:e.authorization.id},closeModal(){this.$emit("modal-close")}}});let{Component:y}=Shopware;y.register("swag-paypal-payment-actions",{template:'{% block swag_paypal_payment_actions %}\n<div>\n    <div class="swag-paypal-payment-actions__button-container">\n        <div class="swag-paypal-payment-actions__authorize-button-group">\n\n            {% block swag_paypal_payment_actions_void %}\n            <sw-button\n                v-if="showVoidButton"\n                size="small"\n                :disabled="!acl.can(\'order.editor\')"\n                @click="spawnModal(\'void\')"\n            >\n                {{ $tc(\'swag-paypal-payment.buttons.label.void\') }}\n            </sw-button>\n            {% endblock %}\n\n            {% block swag_paypal_payment_actions_capture %}\n            <sw-button\n                v-if="captureableAmount > 0"\n                size="small"\n                :disabled="!acl.can(\'order.editor\')"\n                @click="spawnModal(\'capture\')"\n            >\n                {{ $tc(\'swag-paypal-payment.buttons.label.capture\') }}\n            </sw-button>\n            {% endblock %}\n        </div>\n\n        {% block swag_paypal_payment_actions_refund %}\n        <sw-button\n            variant="primary"\n            size="small"\n            :disabled="refundableAmount <= 0 || !acl.can(\'order.editor\')"\n            @click="spawnModal(\'refund\')"\n        >\n            {{ $tc(\'swag-paypal-payment.buttons.label.refund\') }}\n        </sw-button>\n        {% endblock %}\n\n    </div>\n\n    {% block swag_paypal_payment_actions_modal %}\n        {% block swag_paypal_payment_actions_modal_capture %}\n        <swag-paypal-payment-action-capture\n            v-if="modalType === \'capture\'"\n            :orderId="orderId"\n            :paymentResource="paymentResource"\n            :maxCaptureValue="captureableAmount"\n            @modal-close="closeModal"\n        />\n        {% endblock %}\n\n        {% block swag_paypal_payment_actions_modal_refund %}\n        <swag-paypal-payment-action-refund\n            v-if="modalType === \'refund\'"\n            :orderId="orderId"\n            :paymentResource="paymentResource"\n            @modal-close="closeModal"\n        />\n        {% endblock %}\n\n        {% block swag_paypal_payment_actions_modal_void %}\n        <swag-paypal-payment-action-void\n            v-if="modalType === \'void\'"\n            :orderId="orderId"\n            :paymentResource="paymentResource"\n            @modal-close="closeModal"\n        />\n        {% endblock %}\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["acl"],props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data(){return{modalType:"",refundableAmount:0,captureableAmount:0,showVoidButton:!1,relatedResources:null}},created(){this.createdComponent()},methods:{createdComponent(){this.relatedResources=this.paymentResource.transactions[0].related_resources,this.setPaymentActionAmounts(),this.setShowVoidButton(),this.captureableAmount=this.formatAmount(this.captureableAmount),this.refundableAmount=this.formatAmount(this.refundableAmount)},spawnModal(e){this.modalType=e},closeModal(){this.modalType=""},setPaymentActionAmounts(){null!==this.relatedResources&&this.relatedResources.forEach(e=>{if(e.authorization&&e.authorization.state!==s&&(this.captureableAmount+=Number(e.authorization.amount.total)),e.order&&e.order.state!==s&&(this.captureableAmount+=Number(e.order.amount.total)),e.sale&&(this.refundableAmount+=Number(e.sale.amount.total)),e.capture){let a=Number(e.capture.amount.total);this.captureableAmount-=a,this.refundableAmount+=a}if(e.refund&&"failed"!==e.refund.state&&"cancelled"!==e.refund.state){let a=Number(e.refund.amount.total);a>0&&(a*=-1),this.refundableAmount+=a}})},setShowVoidButton(){if(null===this.relatedResources)return;let e=this.relatedResources[0];if(!e)return;let a=["voided","captured",s];if(!e.sale){if(e.order){let t=e.order;if(a.includes(t.state)){this.captureableAmount=0;return}this.showVoidButton=!0}if(e.authorization){let t=e.authorization;if(a.includes(t.state)){this.captureableAmount=0;return}this.showVoidButton=!0}}},formatAmount(e){return Number(`${Math.round(`${e}e2`)}e-2`)}}});let{Component:_}=Shopware;_.register("swag-paypal-payment-action-v2-capture",{template:'{% block swag_paypal_payment_action_capture_v2 %}\n<sw-modal\n    variant="small"\n    :title="$tc(`swag-paypal-payment.modal.title.capture`)"\n    @modal-close="$emit(\'modal-close\')"\n>\n\n    {% block swag_paypal_payment_action_capture_v2_max_amount %}\n    <sw-text-field\n        v-model:value="captureableAmount"\n        :label="$tc(\'swag-paypal-payment.captureAction.maxAmount\')"\n        :disabled="true"\n    >\n        <template #suffix v-if="currencyCode">\n            {{ currencyCode }}\n        </template>\n    </sw-text-field>\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_capture_v2_amount %}\n    <sw-number-field\n        v-model:value="captureAmount"\n        :max="captureableAmount"\n        :min="0"\n        :label="$tc(\'swag-paypal-payment.captureAction.currentAmount\')"\n    >\n        <template #suffix v-if="currencyCode">\n            {{ currencyCode }}\n        </template>\n    </sw-number-field>\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_capture_v2_invoice_number %}\n    <swag-paypal-text-field\n        v-model:value="captureInvoiceNumber"\n        maxLength="127"\n        :label="$tc(\'swag-paypal-payment.captureAction.captureInvoiceNumber.label\')"\n        :placeholder="$tc(\'swag-paypal-payment.captureAction.captureInvoiceNumber.placeholder\')"\n    />\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_capture_v2_note_to_payer %}\n    <swag-paypal-textarea-field\n        v-model:value="captureNoteToPayer"\n        maxLength="255"\n        :placeholder="$tc(\'swag-paypal-payment.captureAction.captureNoteToPayer.placeholder\')"\n        :label="$tc(\'swag-paypal-payment.captureAction.captureNoteToPayer.label\')"\n    />\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_capture_v2_is_final_capture %}\n    <sw-checkbox-field\n        v-model:value="isFinalCapture"\n        :label="$tc(\'swag-paypal-payment.captureAction.isFinal\')"\n    />\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_capture_v2_hint %}\n    <sw-alert v-if="showHint">\n        {{ $tc(\'swag-paypal-payment.captureAction.isFinalHint\') }}\n    </sw-alert>\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_capture_v2_confirm_button %}\n    <template #modal-footer>\n        <sw-button variant="primary" @click="capture">\n            {{ $tc(\'swag-paypal-payment.captureAction.button.text\') }}\n        </sw-button>\n    </template>\n    {% endblock %}\n\n    <sw-loader v-if="isLoading"/>\n</sw-modal>\n{% endblock %}\n',inject:["SwagPayPalOrderService"],mixins:[Shopware.Mixin.getByName("notification")],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0},captureableAmount:{type:Number,required:!0}},data(){return{authorization:{},isFinalCapture:!0,captureAmount:this.captureableAmount,captureInvoiceNumber:"",captureNoteToPayer:"",currencyCode:"",isLoading:!0}},computed:{showHint(){return this.isFinalCapture&&this.captureAmount!==this.captureableAmount}},created(){this.createdComponent()},methods:{createdComponent(){this.authorization=this.paypalOrder.purchase_units[0].payments.authorizations[0],this.currencyCode=this.authorization.amount.currency_code,this.isLoading=!1},capture(){this.isLoading=!0;let e=this.captureAmount;0===e&&(e=this.captureableAmount),this.SwagPayPalOrderService.captureAuthorization(this.orderTransactionId,this.authorization.id,this.currencyCode,e,this.captureInvoiceNumber,this.captureNoteToPayer,this.paypalPartnerAttributionId,this.isFinalCapture).then(()=>{this.createNotificationSuccess({message:this.$tc("swag-paypal-payment.captureAction.successMessage")}),this.isLoading=!1,this.$emit("modal-close")}).catch(e=>{try{this.createNotificationError({message:`${e.response.data.errors[0].title}: ${e.response.data.errors[0].detail}`,autoClose:!1})}catch(a){this.createNotificationError({message:`${e.title}: ${e.message}`,autoClose:!1})}finally{this.isLoading=!1}})}}});let{Component:h,Filter:b}=Shopware;h.register("swag-paypal-payment-action-v2-refund",{template:'{% block swag_paypal_payment_action_refund_v2 %}\n<sw-modal\n    variant="small"\n    :title="$tc(`swag-paypal-payment.modal.title.refund`)"\n    @modal-close="$emit(\'modal-close\')"\n>\n\n    {% block swag_paypal_payment_action_refund_v2_capture_select %}\n    <sw-select-field\n        v-model:value="selectedCaptureId"\n        :label="$tc(\'swag-paypal-payment.refundAction.invoiceSelect.label\')"\n        @update:value="setCapture"\n    >\n        <option v-for="capture in captures" :value="capture.id">\n            {{ dateFilter(capture.create_time) }} ({{ capture.amount.value }} {{ capture.amount.currency_code }}) - {{ capture.id }} [{{ capture.status }}]\n        </option>\n    </sw-select-field>\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_refund_v2_invoice_number %}\n    <swag-paypal-text-field\n        v-model:value="refundInvoiceNumber"\n        maxLength="127"\n        :label="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.label\')"\n        :placeholder="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.placeholder\')"\n    />\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_refund_v2_amount %}\n    <sw-number-field\n        v-model:value="refundAmount"\n        :max="refundableAmountForSelectedCapture"\n        :min="0"\n        :label="$tc(\'swag-paypal-payment.refundAction.refundAmount.label\')"\n        :helpText="$tc(\'swag-paypal-payment.refundAction.refundAmount.helpText\')"\n    >\n        <template #suffix>\n            {{ selectedCapture.amount.currency_code }}\n        </template>\n    </sw-number-field>\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_refund_v2_note_to_payer %}\n    <swag-paypal-textarea-field\n        v-model:value="refundNoteToPayer"\n        maxLength="255"\n        :placeholder="$tc(\'swag-paypal-payment.refundAction.refundNoteToPayer.placeholder\')"\n        :label="$tc(\'swag-paypal-payment.refundAction.refundNoteToPayer.label\')"\n    />\n    {% endblock %}\n\n    {% block swag_paypal_payment_action_refund_v2_confirm_button %}\n    <template #modal-footer>\n        <sw-button variant="primary" @click="refund">\n            {{ $tc(\'swag-paypal-payment.refundAction.confirmButton.text\') }}\n        </sw-button>\n    </template>\n    {% endblock %}\n\n    <sw-loader v-if="isLoading"/>\n</sw-modal>\n{% endblock %}\n',inject:["SwagPayPalOrderService"],mixins:[Shopware.Mixin.getByName("notification")],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0},refundableAmount:{type:Number,required:!1,default:0}},data(){return{captures:[],selectedCapture:{},refundAmount:0,refundInvoiceNumber:"",refundNoteToPayer:"",selectedCaptureId:"",isLoading:!0}},computed:{dateFilter(){return b.getByName("date")},refundableAmountForSelectedCapture(){return this.selectedCapture.amount.value>this.refundableAmount?Number(this.refundableAmount):Number(this.selectedCapture.amount.value)}},created(){this.createdComponent()},methods:{createdComponent(){this.getRefundableCaptures();let e=this.captures[0];this.selectedCaptureId=e.id,this.selectedCapture=e,this.refundAmount=this.refundableAmountForSelectedCapture,this.isLoading=!1},getRefundableCaptures(){let e=this.paypalOrder.purchase_units[0].payments.captures,a=[];e.forEach(e=>{"REFUNDED"!==e.status&&a.push(e)}),this.captures=a},setCapture(){this.selectedCapture=this.captures.find(e=>e.id===this.selectedCaptureId),this.refundAmount=this.refundableAmountForSelectedCapture},refund(){this.isLoading=!0;let e=this.refundAmount;0===e&&(e=this.selectedCapture.amount.value),this.SwagPayPalOrderService.refundCapture(this.orderTransactionId,this.selectedCapture.id,this.paypalOrder.id,this.selectedCapture.amount.currency_code,e,this.refundInvoiceNumber,this.refundNoteToPayer,this.paypalPartnerAttributionId).then(()=>{this.createNotificationSuccess({message:this.$tc("swag-paypal-payment.refundAction.successMessage")}),this.isLoading=!1,this.$emit("modal-close")}).catch(e=>{try{this.createNotificationError({message:`${e.response.data.errors[0].title}: ${e.response.data.errors[0].detail}`,autoClose:!1})}catch(a){this.createNotificationError({message:`${e.title}: ${e.message}`,autoClose:!1})}finally{this.isLoading=!1}})}}});let{Component:w}=Shopware;w.register("swag-paypal-payment-action-v2-void",{template:'{% block swag_paypal_paymemnt_action_v2_void %}\n<sw-modal\n    variant="small"\n    :title="$tc(`swag-paypal-payment.modal.title.void`)"\n    @modal-close="closeModal"\n>\n\n    {% block swag_paypal_paymemnt_action_v2_void_headline %}\n    <p>{{ $tc(\'swag-paypal-payment.voidAction.confirm.message\') }}</p>\n    {% endblock %}\n\n    <template #modal-footer>\n\n        {% block swag_paypal_paymemnt_action_v2_void_cancel_button %}\n        <sw-button @click="closeModal">\n            {{ $tc(\'global.default.no\') }}\n        </sw-button>\n        {% endblock %}\n\n        {% block swag_paypal_paymemnt_action_v2_void_confirm_button %}\n        <sw-button variant="primary" @click="voidPayment">\n            {{ $tc(\'swag-paypal-payment.voidAction.confirm.button.confirm\') }}\n        </sw-button>\n        {% endblock %}\n\n    </template>\n\n    <sw-loader v-if="isLoading" size="43px"/>\n</sw-modal>\n{% endblock %}\n',inject:["SwagPayPalOrderService"],mixins:[Shopware.Mixin.getByName("notification")],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0}},data(){return{isLoading:!1}},methods:{voidPayment(){this.isLoading=!0;let e=this.paypalOrder.purchase_units[0].payments.authorizations[0];this.SwagPayPalOrderService.voidAuthorization(this.orderTransactionId,e.id,this.paypalPartnerAttributionId).then(()=>{this.createNotificationSuccess({message:this.$tc("swag-paypal-payment.voidAction.successMessage")}),this.isLoading=!1,this.closeModal()}).catch(e=>{try{this.createNotificationError({message:`${e.response.data.errors[0].title}: ${e.response.data.errors[0].detail}`,autoClose:!1})}catch(a){this.createNotificationError({message:`${e.title}: ${e.message}`,autoClose:!1})}finally{this.isLoading=!1}})},closeModal(){this.$emit("modal-close")}}}),t(4300);let{Component:g}=Shopware;g.register("swag-paypal-payment-actions-v2",{template:'{% block swag_paypal_payment_actions_v2 %}\n<div>\n    <div class="swag-paypal-payment-actions-v2__button-container">\n        <div>\n            {% block swag_paypal_payment_actions_v2_void %}\n            <sw-button\n                v-if="showVoidButton"\n                size="small"\n                :disabled="!acl.can(\'order.editor\')"\n                @click="spawnModal(\'void\')"\n            >\n                {{ $tc(\'swag-paypal-payment.buttons.label.void\') }}\n            </sw-button>\n            {% endblock %}\n\n            {% block swag_paypal_payment_actions_v2_capture %}\n            <sw-button\n                v-if="captureableAmount > 0"\n                size="small"\n                :disabled="!acl.can(\'order.editor\')"\n                @click="spawnModal(\'capture\')"\n            >\n                {{ $tc(\'swag-paypal-payment.buttons.label.capture\') }}\n            </sw-button>\n            {% endblock %}\n        </div>\n\n        {% block swag_paypal_payment_actions_v2_refund %}\n        <sw-button\n            variant="primary"\n            size="small"\n            :disabled="refundableAmount <= 0 || !acl.can(\'order.editor\')"\n            @click="spawnModal(\'refund\')"\n        >\n            {{ $tc(\'swag-paypal-payment.buttons.label.refund\') }}\n        </sw-button>\n        {% endblock %}\n    </div>\n\n    {% block swag_paypal_payment_actions_v2_modal %}\n        {% block swag_paypal_payment_actions_v2_modal_refund %}\n        <swag-paypal-payment-action-v2-refund\n            v-if="modalType === \'refund\'"\n            :orderTransactionId="orderTransactionId"\n            :paypalOrder="paypalOrder"\n            :paypalPartnerAttributionId="paypalPartnerAttributionId"\n            :refundableAmount="refundableAmount"\n            @modal-close="closeModal"\n        />\n        {% endblock %}\n\n        {% block swag_paypal_payment_actions_v2_modal_capture %}\n        <swag-paypal-payment-action-v2-capture\n            v-if="modalType === \'capture\'"\n            :orderTransactionId="orderTransactionId"\n            :paypalOrder="paypalOrder"\n            :paypalPartnerAttributionId="paypalPartnerAttributionId"\n            :captureableAmount="captureableAmount"\n            @modal-close="closeModal"\n        />\n        {% endblock %}\n\n        {% block swag_paypal_payment_actions_v2_modal_void %}\n        <swag-paypal-payment-action-v2-void\n            v-if="modalType === \'void\'"\n            :orderTransactionId="orderTransactionId"\n            :paypalOrder="paypalOrder"\n            :paypalPartnerAttributionId="paypalPartnerAttributionId"\n            @modal-close="closeModal"\n        />\n        {% endblock %}\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["acl"],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0},refundableAmount:{type:Number,required:!0},captureableAmount:{type:Number,required:!0},showVoidButton:{type:Boolean,required:!0}},data(){return{modalType:""}},methods:{spawnModal(e){this.modalType=e},closeModal(){this.modalType="",this.$emit("reload-paypal-order")}}});let{Component:f,Filter:v}=Shopware;f.register("swag-paypal-payment-details-v1",{template:'{% block swag_paypal_payment_details_v1 %}\n<div class="swag-paypal-payment-details_v1">\n    <sw-card\n        position-identifier="swag-paypal-payment-details-v1"\n        :title="$tc(\'swag-paypal-payment.paymentDetails.cardTitle\')"\n    >\n        <template #grid>\n\n            {% block swag_paypal_payment_actions_section %}\n            <sw-card-section secondary slim>\n                <swag-paypal-payment-actions :orderId="orderId" :paymentResource="paymentResource"/>\n            </sw-card-section>\n            {% endblock %}\n\n            <sw-card-section divider="top">\n                <sw-container columns="1fr" gap="0px 30px">\n\n                    {% block swag_paypal_payment_detail_invoice %}\n                        {% block swag_paypal_payment_detail_invoice_heading %}\n                        <h3>\n                            {{ $tc(\'swag-paypal-payment.paymentDetails.invoice.heading\') }}\n                        </h3>\n                        {% endblock %}\n\n                        {% block swag_paypal_payment_detail_invoice_list %}\n                        <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.totalAmount\') }}</dt>\n                            <dd>{{ amount.total }} {{ currency }}</dd>\n\n                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.subTotal\') }}</dt>\n                            <dd> {{ amount.details.subtotal }} {{ currency }}</dd>\n\n                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.shipping\') }}</dt>\n                            <dd> {{ amount.details.shipping }} {{ currency }}</dd>\n                        </sw-description-list>\n                        {% endblock %}\n\n                        {% block swag_paypal_payment_detail_payment %}\n                            {% block swag_paypal_payment_detail_payment_heading %}\n                            <h3 class="swag-paypal-payment-detail__heading">\n                                {{ $tc(\'swag-paypal-payment.paymentDetails.payment.heading\') }}\n                            </h3>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_payment_list %}\n                            <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.intent\') }}</dt>\n                                <dd>{{ $tc(`swag-paypal.settingForm.behavior.intent.${paymentResource.intent}`) }}</dd>\n\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.paymentId\') }}</dt>\n                                <dd>{{ paymentResource.id }}</dd>\n\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.cartId\') }}</dt>\n                                <dd>{{ paymentResource.cart }}</dd>\n\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.state\') }}</dt>\n                                <dd>{{ paymentResource.state }}</dd>\n\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.createTime\') }}</dt>\n                                <dd>{{ createDateTime }}</dd>\n\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.updateTime\') }}</dt>\n                                <dd>{{ updateDateTime }}</dd>\n                            </sw-description-list>\n                            {% endblock %}\n                        {% endblock %}\n\n                        {% block swag_paypal_payment_detail_customer %}\n                            {% block swag_paypal_payment_detail_customer_heading %}\n                            <h3 class="swag-paypal-payment-detail__heading">\n                                {{ $tc(\'swag-paypal-payment.paymentDetails.customer.heading\') }}\n                            </h3>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_customer_list %}\n                            <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.customer.payerId\') }}</dt>\n                                <dd>{{ payerId }}</dd>\n                            </sw-description-list>\n                            {% endblock %}\n                        {% endblock %}\n                    {% endblock %}\n\n                </sw-container>\n            </sw-card-section>\n        </template>\n    </sw-card>\n\n    {% block swag_paypal_payment_transaction_history_card %}\n    <sw-card\n        position-identifier="swag-paypal-payment-transaction-history-v1"\n        :title="$tc(\'swag-paypal-payment.transactionHistory.cardTitle\')"\n    >\n        <template #grid>\n\n            {% block swag_paypal_payment_transaction_history_grid %}\n            <sw-data-grid\n                :dataSource="relatedResources"\n                :columns="relatedResourceColumns"\n                :showActions="false"\n                :showSelection="false"\n            />\n            {% endblock %}\n\n        </template>\n    </sw-card>\n    {% endblock %}\n\n</div>\n{% endblock %}\n',props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data(){return{relatedResources:[],createDateTime:"",updateDateTime:"",currency:"",amount:{},payerId:""}},computed:{dateFilter(){return v.getByName("date")},relatedResourceColumns(){return[{property:"type",label:this.$tc("swag-paypal-payment.transactionHistory.types.type"),rawData:!0},{property:"total",label:this.$tc("swag-paypal-payment.transactionHistory.types.amount"),rawData:!0},{property:"id",label:this.$tc("swag-paypal-payment.transactionHistory.types.trackingId"),rawData:!0},{property:"status",label:this.$tc("swag-paypal-payment.transactionHistory.types.state"),rawData:!0},{property:"transactionFee",label:this.$tc("swag-paypal-payment.transactionHistory.types.transactionFee"),rawData:!0},{property:"paymentMode",label:this.$tc("swag-paypal-payment.transactionHistory.types.paymentMode"),rawData:!0},{property:"create",label:this.$tc("swag-paypal-payment.transactionHistory.types.createTime"),rawData:!0},{property:"update",label:this.$tc("swag-paypal-payment.transactionHistory.types.updateTime"),rawData:!0}]}},created(){this.createdComponent()},methods:{createdComponent(){this.createDateTime=this.formatDate(this.paymentResource.create_time),this.updateDateTime=this.formatDate(this.paymentResource.update_time),this.amount=this.paymentResource.transactions[0].amount,this.currency=this.paymentResource.transactions[0].amount.currency,this.paymentResource.payer&&this.paymentResource.payer.payer_info&&(this.payerId=this.paymentResource.payer.payer_info.payer_id),this.setRelatedResources()},setRelatedResources(){let e=this.paymentResource.transactions[0].related_resources;null!==e&&e.forEach(e=>{e.sale&&this.pushRelatedResource("sale",e.sale),e.authorization&&this.pushRelatedResource("authorization",e.authorization),e.order&&this.pushRelatedResource("order",e.order),e.refund&&this.pushRelatedResource("refund",e.refund),e.capture&&this.pushRelatedResource("capture",e.capture)})},pushRelatedResource(e,a){let t=null,n=a.amount.currency;a.transaction_fee&&(t=`${a.transaction_fee.value} ${n}`),this.relatedResources.push({id:a.id,type:this.$tc(`swag-paypal-payment.transactionHistory.states.${e}`),total:`${a.amount.total} ${n}`,create:this.formatDate(a.create_time),createRaw:a.create_time,update:this.formatDate(a.update_time),transactionFee:t,status:a.state,paymentMode:a.payment_mode}),this.relatedResources.sort((e,a)=>new Date(e.createRaw)-new Date(a.createRaw))},formatDate(e){return this.dateFilter(e,{hour:"2-digit",minute:"2-digit",second:"2-digit"})}}});let{Component:k,Filter:$}=Shopware;k.register("swag-paypal-payment-details-v2",{template:'{% block swag_paypal_payment_details_v2 %}\n<div class="swag-paypal-payment-details_v2">\n    <sw-card\n        position-identifier="swag-paypal-payment-details-v2"\n        :title="$tc(\'swag-paypal-payment.paymentDetails.cardTitle\')"\n    >\n        <template #grid>\n\n            {% block swag_paypal_payment_actions_section %}\n            <sw-card-section secondary slim>\n                <swag-paypal-payment-actions-v2\n                    :orderTransactionId="orderTransaction.id"\n                    :paypalOrder="paypalOrder"\n                    :paypalPartnerAttributionId="orderTransaction.customFields.swag_paypal_partner_attribution_id"\n                    :refundableAmount="refundableAmount"\n                    :captureableAmount="captureableAmount"\n                    :showVoidButton="showVoidButton"\n                    @reloadPaypalOrder="$emit(\'reload-paypal-order\')"\n                />\n            </sw-card-section>\n            {% endblock %}\n\n            <sw-card-section divider="top">\n\n                    {% block swag_paypal_payment_detail_invoice %}\n                        {% block swag_paypal_payment_detail_invoice_heading %}\n                        <h3>\n                            {{ $tc(\'swag-paypal-payment.paymentDetails.invoice.heading\') }}\n                        </h3>\n                        {% endblock %}\n\n                        {% block swag_paypal_payment_detail_invoice_list %}\n                        <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n\n                            {% block swag_paypal_payment_detail_invoice_list_total %}\n                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.totalAmount\') }}</dt>\n                            <dd>{{ amount.value }} {{ currency }}</dd>\n                            {% endblock %}\n\n                            <template v-if="amount.breakdown">\n                                {% block swag_paypal_payment_detail_invoice_list_sub_total %}\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.subTotal\') }}</dt>\n                                <dd> {{ amount.breakdown.item_total.value }} {{ currency }}</dd>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_invoice_list_discount %}\n                                <template v-if="amount.breakdown.discount">\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.discount\') }}</dt>\n                                    <dd> {{ amount.breakdown.discount.value }} {{ currency }}</dd>\n                                </template>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_invoice_list_handling %}\n                                <template v-if="amount.breakdown.handling">\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.handling\') }}</dt>\n                                    <dd> {{ amount.breakdown.handling.value }} {{ currency }}</dd>\n                                </template>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_invoice_list_insurance %}\n                                <template v-if="amount.breakdown.insurance">\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.insurance\') }}</dt>\n                                    <dd> {{ amount.breakdown.insurance.value }} {{ currency }}</dd>\n                                </template>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_invoice_list_shipping %}\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.shipping\') }}</dt>\n                                <dd> {{ amount.breakdown.shipping.value }} {{ currency }}</dd>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_invoice_list_shipping_discount %}\n                                <template v-if="amount.breakdown.insurance">\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.shipping_discount\') }}</dt>\n                                    <dd> {{ amount.breakdown.shipping_discount.value }} {{ currency }}</dd>\n                                </template>\n                                {% endblock %}\n                            </template>\n\n                        </sw-description-list>\n                        {% endblock %}\n\n                        {% block swag_paypal_payment_detail_payment %}\n                            {% block swag_paypal_payment_detail_payment_heading %}\n                            <h3 class="swag-paypal-payment-detail__heading">\n                                {{ $tc(\'swag-paypal-payment.paymentDetails.payment.heading\') }}\n                            </h3>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_payment_list %}\n                            <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n                                {% block swag_paypal_payment_detail_payment_list_intent %}\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.intent\') }}</dt>\n                                <dd>{{ $tc(`swag-paypal.settingForm.behavior.intent.${paypalOrder.intent}`) }}</dd>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_payment_list_id %}\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.paymentId\') }}</dt>\n                                <dd>{{ paypalOrder.id }}</dd>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_payment_list_status %}\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.state\') }}</dt>\n                                <dd>{{ paypalOrder.status }}</dd>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_payment_list_create_time %}\n                                <template v-if="createDateTime">\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.createTime\') }}</dt>\n                                    <dd>{{ createDateTime }}</dd>\n                                </template>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_payment_list_update_time %}\n                                <template v-if="updateDateTime">\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.updateTime\') }}</dt>\n                                    <dd>{{ updateDateTime }}</dd>\n                                </template>\n                                {% endblock %}\n\n                            </sw-description-list>\n                            {% endblock %}\n                        {% endblock %}\n\n                        {% block swag_paypal_payment_detail_customer %}\n                        <template v-if="payerId">\n\n                            {% block swag_paypal_payment_detail_customer_heading %}\n                            <h3 class="swag-paypal-payment-detail__heading">\n                                {{ $tc(\'swag-paypal-payment.paymentDetails.customer.heading\') }}\n                            </h3>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_customer_list %}\n                            <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.customer.payerId\') }}</dt>\n                                <dd>{{ payerId }}</dd>\n                            </sw-description-list>\n                            {% endblock %}\n\n                        </template>\n                        {% endblock %}\n                    {% endblock %}\n\n            </sw-card-section>\n        </template>\n    </sw-card>\n\n    {% block swag_paypal_payment_pui_details %}\n    <swag-paypal-pui-details\n        v-if="puiDetails"\n        :details="puiDetails"\n        :purchase-unit-amount="amount"\n    />\n    {% endblock %}\n\n    {% block swag_paypal_payment_transaction_history_card %}\n    <sw-card\n        position-identifier="swag-paypal-payment-transaction-history-v2"\n        :title="$tc(\'swag-paypal-payment.transactionHistory.cardTitle\')"\n    >\n        <template #grid>\n            {% block swag_paypal_payment_transaction_history_grid %}\n            <sw-data-grid\n                :dataSource="payments"\n                :columns="paymentColumns"\n                :showActions="false"\n                :showSelection="false"\n            />\n            {% endblock %}\n        </template>\n    </sw-card>\n    {% endblock %}\n</div>\n{% endblock %}\n',props:{paypalOrder:{type:Object,required:!0},orderTransaction:{type:Object,required:!0}},data(){return{payments:[],createDateTime:"",updateDateTime:"",currency:"",amount:{},payerId:"",refundableAmount:0,captureableAmount:0,showVoidButton:!1}},computed:{dateFilter(){return $.getByName("date")},paymentColumns(){return[{property:"type",label:this.$tc("swag-paypal-payment.transactionHistory.types.type"),rawData:!0},{property:"id",label:this.$tc("swag-paypal-payment.transactionHistory.types.trackingId"),rawData:!0},{property:"total",label:this.$tc("swag-paypal-payment.transactionHistory.types.amount"),rawData:!0},{property:"status",label:this.$tc("swag-paypal-payment.transactionHistory.types.state"),rawData:!0},{property:"transactionFee",label:this.$tc("swag-paypal-payment.transactionHistory.types.transactionFee"),rawData:!0},{property:"create",label:this.$tc("swag-paypal-payment.transactionHistory.types.createTime"),rawData:!0},{property:"update",label:this.$tc("swag-paypal-payment.transactionHistory.types.updateTime"),rawData:!0}]},puiDetails(){return this.orderTransaction.customFields.swag_paypal_pui_payment_instruction}},created(){this.createdComponent()},methods:{createdComponent(){this.createDateTime=this.formatDate(this.paypalOrder.create_time),this.updateDateTime=this.formatDate(this.paypalOrder.update_time),this.amount=this.paypalOrder.purchase_units[0].amount,this.currency=this.amount.currency_code,this.payerId=this.paypalOrder.payer?.payer_id??"",this.setPayments()},setPayments(){let e=this.paypalOrder.purchase_units[0].payments;if(null===e)return;let a=e.authorizations,t=e.captures,n=e.refunds;null!==a&&a.forEach(e=>{this.pushPayment("authorization",e);let a=e.status;("CREATED"===a||"PARTIALLY_CAPTURED"===a)&&(this.captureableAmount+=Number(e.amount.value),this.showVoidButton=!0),"PENDING"===a&&(this.showVoidButton=!0)}),null!==t&&t.forEach(e=>{this.pushPayment("capture",e);let a=Number(e.amount.value);this.refundableAmount+=a,this.captureableAmount-=a}),null!==n&&n.forEach(e=>{this.pushPayment("refund",e),this.refundableAmount-=Number(e.amount.value)}),this.refundableAmount=this.formatAmount(this.refundableAmount),this.captureableAmount=this.formatAmount(this.captureableAmount)},pushPayment(e,a){this.payments.push({id:a.id,type:this.$tc(`swag-paypal-payment.transactionHistory.states.${e}`),total:`${a.amount.value} ${a.amount.currency_code}`,create:this.formatDate(a.create_time),createRaw:a.create_time,update:this.formatDate(a.update_time),transactionFee:this.getTransactionFee(e,a),status:a.status}),this.payments.sort((e,a)=>new Date(e.createRaw)-new Date(a.createRaw))},getTransactionFee(e,a){if("capture"===e){let e=a.seller_receivable_breakdown;if(null===e)return null;let t=e.paypal_fee;return null==t?null:`${t.value} ${t.currency_code}`}if("refund"===e){let e=a.seller_payable_breakdown;if(null===e)return null;let t=e.paypal_fee;return null===t?null:`${t.value} ${t.currency_code}`}return null},formatDate(e){return this.dateFilter(e,{hour:"2-digit",minute:"2-digit",second:"2-digit"})},formatAmount(e){return Number(`${Math.round(`${e}e2`)}e-2`)}}}),t(3562);let{Component:P}=Shopware,A=Shopware.Utils.dom;P.register("swag-paypal-pui-details",{template:"{% block swag_paypal_pui_details %}\n<sw-card\n    position-identifier=\"swag-paypal-pui-details\"\n    :title=\"$tc('swag-paypal-payment.puiDetails.cardTitle')\"\n>\n\n    {% block swag_paypal_pui_details_textarea %}\n    <div class=\"swag-paypal-pui-details__textarea\">\n        <b>{{ $tc('swag-paypal-payment.puiDetails.bank') }}</b> {{ bankName }}<br>\n        <b>{{ $tc('swag-paypal-payment.puiDetails.iban') }}</b> {{ iban }}<br>\n        <b>{{ $tc('swag-paypal-payment.puiDetails.bic') }}</b> {{ bic }}<br>\n        <b>{{ $tc('swag-paypal-payment.puiDetails.accountHolder') }}</b> {{ accountHolderName }}<br>\n        <b>{{ $tc('swag-paypal-payment.puiDetails.amount') }}</b> {{ amount }}<br>\n        <b>{{ $tc('swag-paypal-payment.puiDetails.reference') }}</b> {{ reference }}<br>\n    </div>\n    {% endblock %}\n\n    {% block swag_paypal_pui_details_copy_button %}\n    <sw-button\n        class=\"swag-paypal-pui-details__copy-button\"\n        variant=\"ghost\"\n        size=\"small\"\n        @click=\"onCopy\"\n    >\n        {{ $tc('swag-paypal-payment.puiDetails.buttonCopy') }}\n    </sw-button>\n    {% endblock %}\n\n</sw-card>\n{% endblock %}\n",props:{details:{type:Object,required:!0},purchaseUnitAmount:{type:Object,required:!0}},computed:{copyText(){return`${this.$tc("swag-paypal-payment.puiDetails.bank")} ${this.bankName}
${this.$tc("swag-paypal-payment.puiDetails.iban")} ${this.iban}
${this.$tc("swag-paypal-payment.puiDetails.bic")} ${this.bic}
${this.$tc("swag-paypal-payment.puiDetails.accountHolder")} ${this.accountHolderName}
${this.$tc("swag-paypal-payment.puiDetails.amount")} ${this.amount}
${this.$tc("swag-paypal-payment.puiDetails.reference")} ${this.reference}`},bankName(){return this.details.deposit_bank_details.bank_name},iban(){return this.details.deposit_bank_details.iban},bic(){return this.details.deposit_bank_details.bic},accountHolderName(){return this.details.deposit_bank_details.account_holder_name},reference(){return this.details.payment_reference},amount(){return`${this.purchaseUnitAmount.value} ${this.purchaseUnitAmount.currency_code}`}},methods:{async onCopy(){if(!navigator?.clipboard){A.copyToClipboard(this.copyText);return}await navigator.clipboard.writeText(this.copyText)}}});let{Component:C}=Shopware;C.extend("swag-paypal-text-field","sw-text-field",{template:'{% block sw_text_field %}\n<sw-contextual-field\n    v-bind="$attrs"\n    class="sw-field--text"\n    :name="formFieldName"\n    @inheritance-restore="$emit(\'inheritance-restore\', $event)"\n    @inheritance-remove="$emit(\'inheritance-remove\', $event)"\n>\n\n    <template v-if="hasPrefix" #sw-contextual-field-prefix="{ disabled, identification }">\n        <slot name="prefix" v-bind="{disabled, identification}"/>\n    </template>\n\n    <template #sw-field-input="{ identification, error, disabled, size, setFocusClass, removeFocusClass, hasSuffix, hasPrefix }">\n        <input\n            v-bind="$attrs"\n            v-on="additionalListeners"\n            type="text"\n            :name="identification"\n            :id="identification"\n            :disabled="disabled"\n            :value="currentValue"\n            :placeHolder="placeholder"\n            @input="onInput"\n            @change="onChange"\n            @focus="setFocusClass"\n            @blur="removeFocusClass"\n        >\n    </template>\n\n    <template v-if="copyable || hasSuffix" #sw-contextual-field-suffix="{disabled, identification}">\n        <slot name="suffix" v-bind="{ identification }"/>\n        <sw-field-copyable\n            v-if="copyable"\n            :displayName="identification"\n            :copyableText="currentValue"\n            :tooltip="copyableTooltip"\n        />\n    </template>\n</sw-contextual-field>\n{% endblock %}\n'});let{Component:x}=Shopware;x.extend("swag-paypal-textarea-field","sw-textarea-field",{template:'{% block sw_block_field %}\n<sw-block-field\n    v-bind="$attrs"\n    class="sw-field--textarea"\n    :name="formFieldName"\n>\n\n    <template #sw-field-input="{identification, helpText, error, disabled, setFocusClass, removeFocusClass }">\n        <textarea\n            v-bind="$attrs"\n            :id="identification"\n            :name="identification"\n            :placeholder="placeholder"\n            :disabled="disabled"\n            :value="currentValue"\n            @change="onChange"\n            @input="onInput"\n            @focus="setFocusClass"\n            @blur="removeFocusClass"\n        />\n    </template>\n</sw-block-field>\n{% endblock %}\n'});let{Component:S}=Shopware,{isEmpty:D}=Shopware.Utils.types;S.override("sw-order-detail",{template:'{% block sw_order_detail_content_tabs_general %}\n{% parent %}\n\n<sw-tabs-item\n    v-if="isPayPalPayment"\n    :route="{ name: \'swag.paypal.payment.detail\', params: { id: $route.params.id } }"\n    :title="$tc(\'swag-paypal.header\')"\n>\n    {{ $tc(\'swag-paypal.header\') }}\n</sw-tabs-item>\n{% endblock %}\n\n\n{% block sw_order_detail_actions_slot_smart_bar_actions %}\n<template v-if="isEditable">\n    {% parent %}\n</template>\n{% endblock %}\n',computed:{isPayPalPayment(){let e=this.order?.transactions?.last();return this.order&&!D(e)&&(e?.customFields?.swag_paypal_order_id||e?.customFields?.swag_paypal_transaction_id)},isEditable(){return!this.isPayPalPayment||"swag.paypal.payment.detail"!==this.$route.name}}}),t(4285);let{Component:T}=Shopware;T.override("sw-order-detail-details",{template:'{% block sw_order_detail_details_shipping_tracking_codes %}\n    {% parent %}\n\n    {% block sw_order_detail_details_shipping_paypal_carrier %}\n    <div v-if="payPalResourceId" class="swag-paypal-order-carrier">\n        <sw-text-field\n            v-model:value="payPalCarrier"\n            disabled\n            :label="$tc(\'sw-order-detail.payPalCarrierLabel\')"\n            :helpText="$tc(\'sw-order-detail.payPalCarrierHelpText\')"\n            :placeholder="$tc(\'sw-order-detail.payPalCarrierPlaceholder\')"\n        />\n\n        <div\n            v-html="payPalCarrierDescription"\n            class="swag-paypal-order-carrier__description"\n        />\n    </div>\n    {% endblock %}\n\n{% endblock %}\n',inject:["systemConfigApiService"],data(){return{isPayPalSandbox:!1}},computed:{transaction(){return this.order?.transactions.last()},payPalResourceId(){return this.transaction?.customFields?.swag_paypal_resource_id},payPalCarrier(){return this.order?.deliveries?.first().shippingMethod?.customFields?.swag_paypal_carrier??""},payPalOrderLink(){let e=this.isPayPalSandbox?"sandbox":"www";return`https://${e}.paypal.com/activity/payment/${this.payPalResourceId}`},payPalCarrierDescription(){return this.$tc("sw-order-detail.payPalCarrierDescription",1,{orderLink:this.payPalOrderLink})}},watch:{payPalResourceId:{async handler(e){if(!e)return;let a=await this.systemConfigApiService.getValues("SwagPayPal.settings",this.order.salesChannelId);Object.hasOwn(a,"SwagPayPal.settings.sandbox")&&(this.isPayPalSandbox=a["SwagPayPal.settings.sandbox"]);let t=await this.systemConfigApiService.getValues("SwagPayPal.settings");this.isPayPalSandbox=t["SwagPayPal.settings.sandbox"]},immediate:!0}}}),t(63);let{Component:I}=Shopware;I.override("sw-order-user-card",{template:'{% block sw_order_detail_base_secondary_info_order_overview_right_column_slot %}\n    {% parent %}\n\n    {% block sw_detail_base_secondary_info_order_overview_paypal_carrier %}\n    <template v-if="payPalResourceId">\n        <dt>\n            {{ $tc(\'sw-order-detail.payPalCarrierLabel\') }}\n            <sw-help-text :text="$tc(\'sw-order-detail.payPalCarrierHelpText\')" />\n        </dt>\n\n        <dd>\n            <div>\n                {{ payPalCarrier ? payPalCarrier : $tc(\'sw-order-detail.payPalCarrierPlaceholder\') }}\n            </div>\n\n            <div\n                v-html="payPalCarrierDescription"\n                class="sw-user-card__paypal-carrier-description"\n            />\n        </dd>\n    </template>\n    {% endblock %}\n\n{% endblock %}\n',inject:["systemConfigApiService"],data(){return{isPayPalSandbox:!1}},computed:{transaction(){return this.currentOrder.transactions?.last()},payPalResourceId(){return this.transaction?.customFields?.swag_paypal_resource_id},payPalCarrier(){return this.delivery?.shippingMethod?.customFields?.swag_paypal_carrier??""},payPalOrderLink(){let e=this.isPayPalSandbox?"sandbox":"www";return`https://${e}.paypal.com/activity/payment/${this.payPalResourceId}`},payPalCarrierDescription(){return this.$tc("sw-order-detail.payPalCarrierDescription",1,{orderLink:this.payPalOrderLink})}},watch:{payPalResourceId:{async handler(e){if(!e)return;let a=await this.systemConfigApiService.getValues("SwagPayPal.settings",this.currentOrder.salesChannelId);Object.hasOwn(a,"SwagPayPal.settings.sandbox")&&(this.isPayPalSandbox=a["SwagPayPal.settings.sandbox"]);let t=await this.systemConfigApiService.getValues("SwagPayPal.settings");this.isPayPalSandbox=t["SwagPayPal.settings.sandbox"]},immediate:!0}}}),t(999);let{Component:R,Filter:N}=Shopware,{isEmpty:O}=Shopware.Utils.types,{mapState:F}=R.getComponentHelper();R.register("swag-paypal-payment-detail",{template:'{% block swag_paypal_payment_detail %}\n<div v-if="isLoading || loading" class="swag-paypal-payment-detail">\n    {% block swag_paypal_payment_detail_loading_state %}\n    <sw-skeleton />\n    <sw-skeleton />\n    {% endblock %}\n</div>\n\n<div v-else-if="!hasPayPalDetails" class="swag-paypal-payment-detail">\n    {% block swag_paypal_payment_detail_error_page %}\n        {% block swag_paypal_payment_detail_error_page_cancelled %}\n        <sw-empty-state\n            v-if="stateFailedCancelled"\n            :title="$tc(\'swag-paypal-payment.errorPage.title\')"\n            :subline="$tc(\'swag-paypal-payment.errorPage.canceledPaymentContent\')"\n            icon="regular-shopping-bag"\n            color="#A092F0"\n        />\n        {% endblock %}\n\n        {% block swag_paypal_payment_detail_error_page_other %}\n        <sw-empty-state\n            v-else\n            :title="$tc(\'swag-paypal-payment.errorPage.title\')"\n            :subline="$tc(\'swag-paypal-payment.errorPage.other\')"\n            icon="regular-shopping-bag"\n            color="#A092F0"\n        />\n        {% endblock %}\n    {% endblock %}\n</div>\n\n<div v-else class="swag-paypal-payment-detail">\n    {% block swag_paypal_payment_detail_components %}\n        {% block swag_paypal_payment_detail_details_v1 %}\n        <swag-paypal-payment-details-v1\n            v-if="!!paymentResource"\n            :paymentResource="paymentResource"\n            :orderId="order.id"\n        />\n        {% endblock %}\n\n        {% block swag_paypal_payment_detail_details_v2 %}\n        <swag-paypal-payment-details-v2\n            v-if="!!paypalOrder"\n            :paypalOrder="paypalOrder"\n            :orderTransaction="orderTransaction"\n            :orderTransactionId="orderTransaction.id"\n            :paypalPartnerAttributionId="orderTransaction.customFields.swag_paypal_partner_attribution_id"\n            @reloadPaypalOrder="fetchPayPalDetails"\n        />\n        {% endblock %}\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["SwagPayPalPaymentService","SwagPayPalOrderService","repositoryFactory"],mixins:[Shopware.Mixin.getByName("notification")],props:{isLoading:{type:Boolean,required:!0}},data(){return{loading:!1,paypalOrder:null,paymentResource:null}},computed:{...F("swOrderDetail",["order"]),orderTransaction(){return this.order.transactions.last()},dateFilter(){return N.getByName("date")},stateFailedCancelled(){return this.orderTransaction.stateMachineState.technicalName in["cancelled","failed"]},hasPayPalDetails(){return!!this.paypalOrder||!!this.paymentResource}},watch:{order:{immediate:!0,handler(){this.paypalOrder=null,this.paymentResource=null,this.fetchPayPalDetails()}}},methods:{async fetchPayPalDetails(){if(!this.order||O(this.orderTransaction.customFields))return;this.loading=!0;let e=this.orderTransaction.customFields.swag_paypal_transaction_id;e&&await this.handlePayPalPayment(e);let a=this.orderTransaction.customFields.swag_paypal_order_id;a&&await this.handlePayPalOrder(a)},handlePayPalOrder(e){return this.SwagPayPalOrderService.getOrderDetails(this.orderTransaction.id,e).then(e=>{this.paypalOrder=e,this.loading=!1}).catch(this.handleError)},handlePayPalPayment(e){return this.SwagPayPalPaymentService.getPaymentDetails(this.order.id,e).then(e=>{this.paymentResource=e,this.loading=!1}).catch(this.handleError)},handleError(e){try{this.createNotificationError({message:`${this.$tc("swag-paypal-payment.paymentDetails.error.title")}: ${e.response.data.errors[0].detail}`,autoClose:!1})}catch(a){this.createNotificationError({message:`${this.$tc("swag-paypal-payment.paymentDetails.error.title")}: ${e.message}`,autoClose:!1})}finally{this.loading=!1}}}});let{Module:M}=Shopware;M.register("swag-paypal-payment",{type:"plugin",name:"SwagPayPal",title:"swag-paypal-payment.general.title",description:"swag-paypal-payment.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#2b52ff",routeMiddleware(e,a){"sw.order.detail"===a.name&&a.children.push({component:"swag-paypal-payment-detail",name:"swag.paypal.payment.detail",isChildren:!0,path:"/sw/order/detail/:id/paypal",meta:{parentPath:"sw.order.index",privilege:"order.viewer"}}),e(a)}})},4300:function(e,a,t){var n=t(76);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),t(5346).Z("633dbca2",n,!0,{})},8088:function(e,a,t){var n=t(7823);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),t(5346).Z("cab42792",n,!0,{})},3562:function(e,a,t){var n=t(865);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),t(5346).Z("b1d98d64",n,!0,{})},4285:function(e,a,t){var n=t(6716);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),t(5346).Z("38aca948",n,!0,{})},63:function(e,a,t){var n=t(8191);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),t(5346).Z("85e26d00",n,!0,{})},999:function(e,a,t){var n=t(2726);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),t(5346).Z("919ebb5a",n,!0,{})},5346:function(e,a,t){"use strict";function n(e,a){for(var t=[],n={},r=0;r<a.length;r++){var i=a[r],s=i[0],o={id:e+":"+r,css:i[1],media:i[2],sourceMap:i[3]};n[s]?n[s].parts.push(o):t.push(n[s]={id:s,parts:[o]})}return t}t.d(a,{Z:function(){return y}});var r="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!r)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},s=r&&(document.head||document.getElementsByTagName("head")[0]),o=null,l=0,p=!1,d=function(){},c=null,u="data-vue-ssr-id",m="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function y(e,a,t,r){p=t,c=r||{};var s=n(e,a);return _(s),function(a){for(var t=[],r=0;r<s.length;r++){var o=i[s[r].id];o.refs--,t.push(o)}a?_(s=n(e,a)):s=[];for(var r=0;r<t.length;r++){var o=t[r];if(0===o.refs){for(var l=0;l<o.parts.length;l++)o.parts[l]();delete i[o.id]}}}}function _(e){for(var a=0;a<e.length;a++){var t=e[a],n=i[t.id];if(n){n.refs++;for(var r=0;r<n.parts.length;r++)n.parts[r](t.parts[r]);for(;r<t.parts.length;r++)n.parts.push(b(t.parts[r]));n.parts.length>t.parts.length&&(n.parts.length=t.parts.length)}else{for(var s=[],r=0;r<t.parts.length;r++)s.push(b(t.parts[r]));i[t.id]={id:t.id,refs:1,parts:s}}}}function h(){var e=document.createElement("style");return e.type="text/css",s.appendChild(e),e}function b(e){var a,t,n=document.querySelector("style["+u+'~="'+e.id+'"]');if(n){if(p)return d;n.parentNode.removeChild(n)}if(m){var r=l++;a=g.bind(null,n=o||(o=h()),r,!1),t=g.bind(null,n,r,!0)}else a=f.bind(null,n=h()),t=function(){n.parentNode.removeChild(n)};return a(e),function(n){n?(n.css!==e.css||n.media!==e.media||n.sourceMap!==e.sourceMap)&&a(e=n):t()}}var w=function(){var e=[];return function(a,t){return e[a]=t,e.filter(Boolean).join("\n")}}();function g(e,a,t,n){var r=t?"":n.css;if(e.styleSheet)e.styleSheet.cssText=w(a,r);else{var i=document.createTextNode(r),s=e.childNodes;s[a]&&e.removeChild(s[a]),s.length?e.insertBefore(i,s[a]):e.appendChild(i)}}function f(e,a){var t=a.css,n=a.media,r=a.sourceMap;if(n&&e.setAttribute("media",n),c.ssrId&&e.setAttribute(u,a.id),r&&(t+="\n/*# sourceURL="+r.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */"),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}}]);