(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[89],{8694:function(){},7089:function(t,a,e){"use strict";e.r(a),e.d(a,{default:function(){return i}}),e(5570);let{Context:n}=Shopware,{Criteria:o}=Shopware.Data;var i=Shopware.Component.wrapComponentConfig({template:'{% block swag_paypal_content_card_channel_config_checkout %}\n<sw-card\n    class="sw-card--grid"\n    position-identifier="swag-paypal-checkout"\n    :is-loading="isLoading || isLoadingPaymentMethods"\n    :title="$tc(\'swag-paypal.settingForm.checkout.cardTitle\')"\n>\n    <template #avatar>\n        {% block swag_paypal_content_card_channel_config_checkout_avatar %}\n        <img\n            :src="assetFilter(\'swagpaypal/static/img/paypal-logo-avatar.svg\')"\n            :alt="$tc(\'swag-paypal.settingForm.checkout.appImageAlt\')"\n        >\n        {% endblock %}\n    </template>\n\n    <template #header-right>\n        {% block swag_paypal_content_card_channel_config_checkout_settings_link %}\n        <sw-internal-link :routerLink="{ name: \'swag.paypal.index\' }">\n            {{ $tc(\'swag-paypal.settingForm.checkout.settingsLink\') }}\n        </sw-internal-link>\n        {% endblock %}\n    </template>\n\n    {% block swag_paypal_content_card_channel_config_checkout_container %}\n    <div class="swag-paypal-checkout">\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_box %}\n        <div :class="{\'swag-paypal-checkout__box\': showMerchantInformation }">\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_sandbox_switch %}\n            <sw-inherit-wrapper\n                v-if="showSandboxToggle"\n                v-model:value="actualConfigData[\'SwagPayPal.settings.sandbox\']"\n                class="swag-paypal-checkout__sandbox-toggle"\n                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.sandbox\']"\n                :customInheritationCheckFunction="checkBoolFieldInheritance"\n            >\n                <template #content="props">\n                    <sw-switch-field\n                        v-tooltip.left="{\n                            message: isSandbox ? $tc(\'swag-paypal.settingForm.checkout.sandbox.onlySandboxTooltip\') : $tc(\'swag-paypal.settingForm.checkout.sandbox.onlyLiveTooltip\'),\n                            disabled: !sandboxToggleDisabled,\n                        }"\n                        name="SwagPayPal.settings.sandbox"\n                        :mapInheritance="props"\n                        :label="$tc(\'swag-paypal.settingForm.checkout.sandbox.label\')"\n                        :helpText="$tc(\'swag-paypal.settingForm.checkout.sandbox.helpText\')"\n                        :disabled="sandboxToggleDisabled || props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                        :value="props.currentValue"\n                        @update:value="props.updateCurrentValue"\n                    />\n                </template>\n            </sw-inherit-wrapper>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_header %}\n            <p\n                v-if="!showMerchantInformation"\n                class="swag-paypal-checkout__header"\n            >\n                {{ $tc(\'swag-paypal.settingForm.checkout.header\') }}\n            </p>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_description %}\n            <p\n                v-if="!showMerchantInformation"\n                class="swag-paypal-checkout__description"\n            >\n                {{ $tc(\'swag-paypal.settingForm.checkout.description\') }}\n            </p>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_banner %}\n            <sw-alert\n                v-if="!isOnboardingPPCPFinished"\n                variant="info"\n                class="swag-paypal-checkout__banner"\n            >\n                <span v-html="$tc(\'swag-paypal.settingForm.checkout.banner\')"></span>\n            </sw-alert>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_merchant_information %}\n            <p\n                v-if="showMerchantInformation"\n                class="swag-paypal-checkout__merchant-information"\n            >\n                {{ merchantEmail }}\n                <br>\n                {{ merchantInformation.merchantIntegrations.legal_name }}\n            </p>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_onboarding %}\n                {% block swag_paypal_content_card_channel_config_checkout_container_onboarding_button %}\n                <a\n                    class="sw-button sw-button--ghost"\n                    target="_blank"\n                    :href="onboardingUrlLive"\n                    :disabled="!acl.can(\'swag_paypal.editor\')"\n                    data-paypal-onboard-complete="onboardingCallbackLive"\n                    data-paypal-button="true"\n                >\n                    {{ liveButtonTitle }}\n                </a>\n                <a\n                    class="swag-paypal-checkout__button-onboarding-sandbox"\n                    target="_blank"\n                    :href="onboardingUrlSandbox"\n                    :disabled="!acl.can(\'swag_paypal.editor\')"\n                    data-paypal-onboard-complete="onboardingCallbackSandbox"\n                    data-paypal-button="true"\n                >\n                    {{ sandboxButtonTitle }}\n                </a>\n                {% endblock %}\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods %}\n        <p class="swag-paypal-checkout__payment-method-headline">\n            {{ $tc(\'swag-paypal.settingForm.checkout.paymentMethodText\') }}\n        </p>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items %}\n        <div class="swag-paypal-checkout-payment-method_container">\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item %}\n            <swag-paypal-checkout-method\n                v-for="paymentMethod in paymentMethods"\n                :key="paymentMethod.id"\n                :payment-method="paymentMethod"\n                :onboarding-status="onboardingStatus(paymentMethod)"\n                :actual-config-data="actualConfigData"\n            />\n            {% endblock %}\n\n        </div>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_credentials_slot %}\n        <slot name="credentials"></slot>\n        {% endblock %}\n\n    </div>\n    {% endblock %}\n\n    {% block sw_deactivate_paypal_plus_modal %}\n    <sw-modal\n        v-if="plusDeprecationModalOpen"\n        class="swag-paypal-checkout-modal"\n        :title="$tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.title\')"\n        variant="default"\n        @modal-close="closeModal"\n    >\n        {% block sw_deactivate_paypal_plus_modal_text %}\n        <p class="swag-paypal-checkout-modal__text">\n            {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.text\') }}\n        </p>\n        {% endblock %}\n\n        {% block sw_deactivate_paypal_plus_modal_warning %}\n        <sw-alert\n            class="swag-paypal-checkout-modal__warning"\n            variant="warning"\n        >\n            {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.warning\') }}\n        </sw-alert>\n        {% endblock %}\n\n        {% block sw_deactivate_paypal_plus_modal_footer %}\n        <template #modal-footer>\n            {% block sw_deactivate_paypal_plus_modal_cancel_button %}\n            <sw-button @click="closeModal">\n                {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.button.cancel\') }}\n            </sw-button>\n            {% endblock %}\n\n            {% block ssw_deactivate_paypal_plus_modal_confirm_button %}\n            <sw-button\n                variant="primary"\n                @click="deactivatePayPalPlus"\n            >\n                {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.button.deactivate\') }}\n            </sw-button>\n            {% endblock %}\n\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n',inject:["acl","repositoryFactory","SwagPayPalApiCredentialsService"],mixins:[Shopware.Mixin.getByName("swag-paypal-notification"),Shopware.Mixin.getByName("swag-paypal-credentials-loader")],props:{actualConfigData:{type:Object,required:!0,default:()=>({})},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null},clientIdErrorState:{type:Object,required:!1,default:null},clientSecretErrorState:{type:Object,required:!1,default:null},clientIdSandboxErrorState:{type:Object,required:!1,default:null},clientSecretSandboxErrorState:{type:Object,required:!1,default:null},clientIdFilled:{type:Boolean,required:!1,default:!1},clientSecretFilled:{type:Boolean,required:!1,default:!1},clientIdSandboxFilled:{type:Boolean,required:!1,default:!1},clientSecretSandboxFilled:{type:Boolean,required:!1,default:!1},isLoading:{type:Boolean,required:!0}},data(){return{paymentMethods:[],merchantInformation:{merchantIntegrations:{legalName:null,primaryEmail:null},capabilities:{}},plusDeprecationModalOpen:!1,showHintMerchantIdMustBeEnteredManually:!1,isLoadingPaymentMethods:!1}},computed:{assetFilter(){return Shopware.Filter.getByName("asset")},paymentMethodRepository(){return this.repositoryFactory.create("payment_method")},paymentMethodCriteria(){let t=new o(1,500);return t.addAssociation("media"),t.addFilter(o.equals("plugin.name","SwagPayPal")),t.addSorting(o.sort("position","ASC"),!0),t},isLive(){return!this.isSandbox},isSandbox(){return this.actualConfigData["SwagPayPal.settings.sandbox"]??!1},liveButtonTitle(){return this.actualConfigData["SwagPayPal.settings.clientSecret"]?this.isSandbox?this.$tc("swag-paypal.settingForm.checkout.button.changeLiveTitle"):this.isOnboardingPPCPFinished?this.paymentMethods.some(t=>"active"!==this.onboardingStatus(t))?this.$tc("swag-paypal.settingForm.checkout.button.restartOnboardingLiveTitle"):this.$tc("swag-paypal.settingForm.checkout.button.changeLiveTitle"):this.$tc("swag-paypal.settingForm.checkout.button.onboardingLiveTitle"):this.$tc("swag-paypal.settingForm.checkout.button.liveTitle")},sandboxButtonTitle(){return this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]?this.isLive?this.$tc("swag-paypal.settingForm.checkout.button.changeSandboxTitle"):this.isOnboardingPPCPFinished?this.paymentMethods.find(t=>"active"!==this.onboardingStatus(t))?this.$tc("swag-paypal.settingForm.checkout.button.restartOnboardingSandboxTitle"):this.$tc("swag-paypal.settingForm.checkout.button.changeSandboxTitle"):this.$tc("swag-paypal.settingForm.checkout.button.onboardingSandboxTitle"):this.$tc("swag-paypal.settingForm.checkout.button.sandboxTitle")},sandboxToggleDisabled(){return(!this.actualConfigData["SwagPayPal.settings.clientSecret"]&&!!this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]&&this.isSandbox||!!this.actualConfigData["SwagPayPal.settings.clientSecret"]&&!this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]&&this.isLive)&&!this.selectedSalesChannelId},isOnboardingPPCPFinished(){let t=this.paymentMethods.find(t=>"handler_swag_sepahandler"===t.formattedHandlerIdentifier);return!!t&&"active"===this.onboardingStatus(t)},showMerchantInformation(){return this.isOnboardingPPCPFinished},showSandboxToggle(){return this.actualConfigData["SwagPayPal.settings.clientSecret"]||this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]||this.selectedSalesChannelId},merchantEmail(){return this.merchantInformation.merchantIntegrations.primary_email??this.merchantInformation.merchantIntegrations.tracking_id}},watch:{isSandbox(){this.$emit("on-save-settings")},isOnboardingPPCPFinished(){let t=this.actualConfigData["SwagPayPal.settings.plusCheckoutEnabled"];t&&(this.plusDeprecationModalOpen=t&&this.isOnboardingPPCPFinished)}},created(){this.createdComponent()},methods:{createdComponent(){this.getPaymentMethodsAndMerchantIntegrations()},deactivatePayPalPlus(){this.$set(this.actualConfigData,"SwagPayPal.settings.plusCheckoutEnabled",!1),this.$set(this.actualConfigData,"SwagPayPal.settings.merchantLocation","other"),this.$set(this.actualConfigData,"SwagPayPal.settings.spbAlternativePaymentMethodsEnabled",!1),this.$emit("on-deactivate-paypal-plus"),this.plusDeprecationModalOpen=!1},async getPaymentMethodsAndMerchantIntegrations(){this.isLoadingPaymentMethods=!0,await Promise.all([this.fetchMerchantIntegrations(),this.getPaymentMethods()]),this.isLoadingPaymentMethods=!1},async getPaymentMethods(){let t=await this.paymentMethodRepository.search(this.paymentMethodCriteria,n.api);this.paymentMethods=t.filter(t=>"handler_swag_pospayment"!==t.formattedHandlerIdentifier&&!(["handler_swag_trustlyapmhandler","handler_swag_giropayapmhandler","handler_swag_sofortapmhandler"].includes(t.formattedHandlerIdentifier??"")&&!t.active))},fetchMerchantIntegrations(){return this.SwagPayPalApiCredentialsService.getMerchantInformation(this.selectedSalesChannelId).then(t=>{this.merchantInformation=t,this.merchantIntegrations=t.capabilities}).catch(t=>{this.createNotificationFromError({errorResponse:t})})},onboardingStatus(t){return this.merchantInformation.capabilities[t.id]},async onChangePaymentMethodActive(t){t.active=!t.active,await this.paymentMethodRepository.save(t,n.api);let a=t.active?"active":"inactive";this.createNotificationSuccess({message:this.$tc(`swag-paypal.settingForm.checkout.paymentMethodStatusChangedSuccess.${a}`,0,{name:t.name})})},closeModal(){this.plusDeprecationModalOpen=!1},onPayPalCredentialsLoadSuccess(t,a,e,n){this.setConfig(t,a,e,n),this.$emit("on-save-settings")},onPayPalCredentialsLoadFailed(t){this.setConfig("","","",t),this.createNotificationError({message:this.$tc("swag-paypal.settingForm.credentials.button.messageFetchedError"),duration:1e4})},setConfig(t,a,e,n){let o=n?"Sandbox":"";this.$set(this.actualConfigData,`SwagPayPal.settings.clientId${o}`,t),this.$set(this.actualConfigData,`SwagPayPal.settings.clientSecret${o}`,a),this.$set(this.actualConfigData,`SwagPayPal.settings.merchantPayerId${o}`,e)},checkBoolFieldInheritance(t){return"boolean"!=typeof t}}})},5570:function(t,a,e){var n=e(8694);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[t.id,n,""]]),n.locals&&(t.exports=n.locals),e(5346).Z("3efa9b01",n,!0,{})},5346:function(t,a,e){"use strict";function n(t,a){for(var e=[],n={},o=0;o<a.length;o++){var i=a[o],s=i[0],l={id:t+":"+o,css:i[1],media:i[2],sourceMap:i[3]};n[s]?n[s].parts.push(l):e.push(n[s]={id:s,parts:[l]})}return e}e.d(a,{Z:function(){return u}});var o="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!o)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},s=o&&(document.head||document.getElementsByTagName("head")[0]),l=null,c=0,r=!1,d=function(){},p=null,h="data-vue-ssr-id",g="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function u(t,a,e,o){r=e,p=o||{};var s=n(t,a);return _(s),function(a){for(var e=[],o=0;o<s.length;o++){var l=i[s[o].id];l.refs--,e.push(l)}a?_(s=n(t,a)):s=[];for(var o=0;o<e.length;o++){var l=e[o];if(0===l.refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete i[l.id]}}}}function _(t){for(var a=0;a<t.length;a++){var e=t[a],n=i[e.id];if(n){n.refs++;for(var o=0;o<n.parts.length;o++)n.parts[o](e.parts[o]);for(;o<e.parts.length;o++)n.parts.push(y(e.parts[o]));n.parts.length>e.parts.length&&(n.parts.length=e.parts.length)}else{for(var s=[],o=0;o<e.parts.length;o++)s.push(y(e.parts[o]));i[e.id]={id:e.id,refs:1,parts:s}}}}function m(){var t=document.createElement("style");return t.type="text/css",s.appendChild(t),t}function y(t){var a,e,n=document.querySelector("style["+h+'~="'+t.id+'"]');if(n){if(r)return d;n.parentNode.removeChild(n)}if(g){var o=c++;a=w.bind(null,n=l||(l=m()),o,!1),e=w.bind(null,n,o,!0)}else a=f.bind(null,n=m()),e=function(){n.parentNode.removeChild(n)};return a(t),function(n){n?(n.css!==t.css||n.media!==t.media||n.sourceMap!==t.sourceMap)&&a(t=n):e()}}var b=function(){var t=[];return function(a,e){return t[a]=e,t.filter(Boolean).join("\n")}}();function w(t,a,e,n){var o=e?"":n.css;if(t.styleSheet)t.styleSheet.cssText=b(a,o);else{var i=document.createTextNode(o),s=t.childNodes;s[a]&&t.removeChild(s[a]),s.length?t.insertBefore(i,s[a]):t.appendChild(i)}}function f(t,a){var e=a.css,n=a.media,o=a.sourceMap;if(n&&t.setAttribute("media",n),p.ssrId&&t.setAttribute(h,a.id),o&&(e+="\n/*# sourceURL="+o.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */"),t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}}]);