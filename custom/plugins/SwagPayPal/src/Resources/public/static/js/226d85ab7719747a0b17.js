(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[993],{4910:function(){},6134:function(){},7768:function(){},6186:function(){},462:function(){},3786:function(){},9356:function(){},615:function(){},4869:function(){},4849:function(){},4985:function(){},9056:function(){},1701:function(){},2500:function(){},5602:function(){},7112:function(){},4864:function(){},5208:function(){},6030:function(){},1447:function(a,e,n){"use strict";n.d(e,{c8:function(){return t},m7:function(){return s}});let t="1ce0868f406d47d98cfe4b281e62f099",s="paypalPosSalesChannel"},5501:function(){let{Component:a}=Shopware;a.extend("swag-paypal-pos-url-field","sw-url-field",{methods:{changeMode(){},getSSLMode(){return!0}}})},7993:function(a,e,n){"use strict";n.r(e),n(4518);let{Component:t}=Shopware;t.register("swag-paypal-pos-status",{template:'{% block swag_paypal_pos_status %}\n    <sw-card position-identifier="swag-paypal-pos-status"\n             :class="statusClasses"\n             :isLoading="isLoading"\n             :title="title">\n\n        {% block swag_paypal_pos_status_icon %}\n            <div class="swag-paypal-pos-status__icon-base">\n                <sw-icon :class="iconClasses"\n                         :name="icon">\n                </sw-icon>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_status %}\n            <div class="swag-paypal-pos-status__status">\n                <slot name="status">{{ status }}</slot>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_detail %}\n            <div class="swag-paypal-pos-status__detail">\n                <slot name="detail"></slot>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_substatus %}\n            <div v-if="showSubStatus" class="swag-paypal-pos-status__substatus">\n\n                {% block swag_paypal_pos_status_substatus_icon %}\n                    <sw-icon v-if="showSubIcon"\n                             :class="subIconClasses"\n                             :name="subIcon">\n                    </sw-icon>\n                {% endblock %}\n\n                {% block swag_paypal_pos_status_substatus_content %}\n                    <span>\n                        <slot name="substatus"></slot>\n                    </span>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_actions %}\n            <div class="swag-paypal-pos-status__actions">\n                <slot name="actions"></slot>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_disabled %}\n            <div v-if="disabled" class="swag-paypal-pos-status__disabled">\n                <slot name="disabledText">{{ disabledText }}</slot>\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',props:{title:{type:String,required:!1,default:""},status:{type:String,required:!0},disabled:{type:Boolean,required:!1,default:!1},disabledText:{type:String,required:!1,default:""},icon:{type:String,required:!0},iconAnimated:{type:Boolean,required:!1,default:!1},subIcon:{type:String,required:!1,default:""},showSubStatus:{type:Boolean,required:!1,default:!1},isLoading:{type:Boolean,required:!0},variant:{type:String,default:"info",validValues:["info","warning","error","success"],validator(a){return["info","warning","error","success"].includes(a)}},subVariant:{type:String,default:"info",validValues:["info","warning","error","success"],validator(a){return["info","warning","error","success"].includes(a)}}},computed:{statusClasses(){return{"swag-paypal-pos-status":!0,[`swag-paypal-pos-status--${this.variant}`]:!0,"swag-paypal-pos-status--disabled":this.disabled}},iconClasses(){return{"swag-paypal-pos-status__icon":!0,"swag-paypal-pos-status__icon-animated":this.iconAnimated}},subIconClasses(){return["swag-paypal-pos-status__subicon",`swag-paypal-pos-status--${this.subVariant}`]},showSubIcon(){return null!==this.subIcon&&void 0!==this.subIcon&&this.subIcon!==this.icon}}}),n(8788);let{Component:s}=Shopware;s.register("swag-paypal-pos-account",{template:'{% block swag_paypal_pos_account %}\n    <sw-card class="swag-paypal-pos-account"\n             position-identifier="swag-paypal-pos-account"\n             :title="$tc(\'sw-sales-channel.detail.titleAccount\')"\n             :isLoading="isLoading">\n\n        {% block swag_paypal_pos_account_grid %}\n            <sw-container columns="min-content 1fr" align="center">\n\n                {% block swag_paypal_pos_account_grid_logo %}\n                    <img class="swag-paypal-pos-account__logo"\n                         alt="Zettle Logo"\n                         :src="assetFilter(\'/swagpaypal/static/img/paypal-pos-logo.svg\')">\n                {% endblock %}\n\n                {% block swag_paypal_pos_account_grid_container %}\n                    <div class="swag-paypal-pos-account__container">\n\n                        {% block swag_paypal_pos_account_grid_container_info %}\n                            <div class="swag-paypal-pos-account__account-info">\n\n                                {% block swag_paypal_pos_account_grid_container_info_name %}\n                                    <div class="swag-paypal-pos-account__name">\n                                        {{ accountName }}\n                                    </div>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_info_email %}\n                                    <div class="swag-paypal-pos-account__email">\n                                        {{ accountEmail }}\n                                    </div>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_info_link %}\n                                    <sw-external-link href="https://my.zettle.com"\n                                                      class="swag-paypal-pos-account__manage-link">\n\n                                        {% block swag_paypal_pos_account_grid_container_info_link_text %}\n                                            {{ $tc(\'swag-paypal-pos.account.manageAccount\') }}\n                                        {% endblock %}\n\n                                    </sw-external-link>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_info_edit_button %}\n                                    {# ToDo PPI-109 - Implement edit connection functionality #}\n                                    <sw-button v-if="false"\n                                               class="swag-paypal-pos-account__edit-connection-button"\n                                               size="small"\n                                               block>\n                                        {{ $tc(\'swag-paypal-pos.account.editConnection\') }}\n                                    </sw-button>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_account_grid_container_status %}\n                            <div class="swag-paypal-pos-account__status-container">\n\n                                {% block swag_paypal_pos_account_grid_container_status_label %}\n                                    <sw-label class="swag-paypal-pos-account__status-label"\n                                              size="medium"\n                                              appearance="pill"\n                                              :variant="connectionStatusVariant"\n                                              :ghost="false"\n                                              :caps="false">\n\n                                        {% block swag_paypal_pos_account_grid_container_status_label_badge %}\n                                            <sw-color-badge class="swag-paypal-pos-account__status-color-badge"\n                                                            rounded\n                                                            :variant="connectionStatusVariant">\n                                            </sw-color-badge>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_pos_account_grid_container_status_label_text %}\n                                            <span class="swag-paypal-pos-account__status-text">\n                                                {{ connectionStatusText }}\n                                            </span>\n                                        {% endblock %}\n                                    </sw-label>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_status_updated %}\n                                    <div v-if="lastRun"\n                                         class="swag-paypal-pos-account__status-updated">\n                                        {{ $tc(\'swag-paypal-pos.account.lastUpdated\') }} {{ dateFilter(lastRun.updatedAt, {\n                                            hour: \'2-digit\',\n                                            minute: \'2-digit\',\n                                            second: \'2-digit\',\n                                            day: \'2-digit\',\n                                            month: \'short\',\n                                            year: \'numeric\'\n                                        }) }}\n                                    </div>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',inject:["SwagPayPalPosSettingApiService","repositoryFactory"],props:{salesChannel:{type:Object,require:!1,default:null},lastRun:{type:Object,require:!1,default:null}},data(){return{isLoading:!1,isError:!1,merchantInfo:null}},computed:{accountName(){return this.isError?this.$tc("swag-paypal-pos.account.errorName"):this.merchantInfo?this.merchantInfo.name:this.$tc("swag-paypal-pos.account.loadingName")},accountEmail(){return this.isError?this.$tc("swag-paypal-pos.account.errorEmail"):this.merchantInfo?this.merchantInfo.contactEmail:this.$tc("swag-paypal-pos.account.loadingEmail")},connectionStatusText(){return this.isError?this.$tc("swag-paypal-pos.account.noConnectionStatus"):this.$tc("swag-paypal-pos.account.connectedStatus")},connectionStatusVariant(){return this.isError?"danger":"success"},runRepository(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")},assetFilter(){return Shopware.Filter.getByName("asset")},dateFilter(){return Shopware.Filter.getByName("date")}},watch:{salesChannel(){this.loadMerchantData()}},created(){this.createdComponent()},methods:{createdComponent(){this.loadMerchantData()},loadMerchantData(){return(this.isError=!1,this.isLoading=!0,null===this.salesChannel)?Promise.resolve():this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel).then(({merchantInformation:a})=>{this.merchantInfo=a,this.isError=!1}).catch(()=>{this.merchantInfo=null,this.isError=!0}).finally(()=>{this.isLoading=!1})}}});let{Component:i}=Shopware;i.register("swag-paypal-pos-status-view",{template:'{% block swag_paypal_pos_status_view %}\n    <swag-paypal-pos-status :disabled="disabled"\n                            :disabledText="$tc(\'swag-paypal-pos.detail.overview.status.disabled\')"\n                            :icon="statusIcon"\n                            :subIcon="statusIconComplete"\n                            :iconAnimated="isSyncing"\n                            :isLoading="isLoading || status === null"\n                            :status="statusTitle"\n                            :showSubStatus="incompleteLastRun"\n                            :title="$tc(\'swag-paypal-pos.detail.overview.titleSync\')"\n                            :variant="statusVariant"\n                            :subVariant="statusCompleteErrorLevel">\n\n        {% block swag_paypal_pos_status_view_actions %}\n            <template #actions>\n                <slot name="actions"></slot>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_view_detail %}\n            <template #detail v-if="isSyncing">\n\n                {% block swag_paypal_pos_status_view_detail_syncing %}\n                    {{ $tc(\'swag-paypal-pos.detail.overview.status.syncingDetail\') }}\n                {% endblock %}\n            </template>\n\n            <template #detail v-if="!isSyncing && lastFinishedRun">\n                <div>\n                    {% block swag_paypal_pos_status_view_detail_static %}\n                        {{ $tc(\'swag-paypal-pos.detail.overview.status.lastSynced\') }}:\n                        {{ dateFilter(lastFinishedRun.updatedAt, {\n                            hour: \'2-digit\',\n                            minute: \'2-digit\',\n                            second: \'2-digit\',\n                            day: \'2-digit\',\n                            month: \'short\',\n                            year: \'numeric\'\n                        }) }}\n                    {% endblock %}\n                </div>\n\n                {% block swag_paypal_pos_status_view_detail_errors %}\n                    <sw-alert v-if="syncErrors"\n                              variant="error"\n                              :closable="true"\n                              :title="$tc(\'swag-paypal-pos.detail.overview.syncErrorTitle\')">\n                        <ul>\n                            <li v-for="error in syncErrors">{{ error.detail }} ({{ error.code }})</li>\n                        </ul>\n                    </sw-alert>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_view_substatus %}\n            <template #substatus v-if="incompleteLastRun">\n                {{ $tc(\'swag-paypal-pos.detail.overview.status.lastSyncedComplete\') }}:\n                {{ dateFilter(lastCompleteRun.updatedAt, {\n                    hour: \'2-digit\',\n                    minute: \'2-digit\',\n                    second: \'2-digit\',\n                    day: \'2-digit\',\n                    month: \'short\',\n                    year: \'numeric\'\n                }) }}\n            </template>\n        {% endblock %}\n    </swag-paypal-pos-status>\n{% endblock %}\n',props:{lastFinishedRun:{type:Object,required:!1,default:null},lastCompleteRun:{type:Object,required:!1,default:null},isLoading:{type:Boolean,default:!1},isSyncing:{type:Boolean,default:!1},salesChannel:{type:Object,required:!1,default:null},syncErrors:{type:Array,required:!1,default:null}},data(){return{statusErrorLevel:null,statusCompleteErrorLevel:null,iconConfig:{syncing:"regular-sync",warning:"regular-exclamation-triangle",error:"regular-times-xs",success:"regular-checkmark",noRunYet:"regular-blocked-circle"}}},computed:{status(){return this.isSyncing?"syncing":this.noRunYet?"noRunYet":this.statusErrorLevel},statusVariant(){return this.isSyncing||this.noRunYet?"info":this.statusErrorLevel},statusIcon(){return this.iconConfig[this.status]||"regular-info-circle"},statusIconComplete(){return this.iconConfig[this.statusCompleteErrorLevel]},noRunYet(){return null===this.salesChannel||null===this.salesChannel.id||null===this.lastFinishedRun},incompleteLastRun(){return null!==this.salesChannel&&null!==this.salesChannel.id&&null!==this.lastFinishedRun&&null!==this.lastCompleteRun&&this.lastFinishedRun.id!==this.lastCompleteRun.id},statusTitle(){let a=this.$tc(`swag-paypal-pos.detail.overview.status.message.${this.status}`);if(this.incompleteLastRun){let e=this.$tc(`swag-paypal-pos.detail.overview.status.task.${this.lastFinishedRun.task}`);this.isSyncing||(a+=` (${e})`)}return this.lastFinishedRun&&"cancelled"===this.lastFinishedRun.status&&!this.isSyncing&&(a=this.$tc("swag-paypal-pos.detail.overview.status.message.aborted")),a},disabled(){return null!==this.salesChannel&&null!==this.salesChannel.id&&!1===this.salesChannel.active},dateFilter(){return Shopware.Filter.getByName("date")}},watch:{lastFinishedRun:{handler(){this.statusErrorLevel=this.getHighestLevel(this.lastFinishedRun)},immediate:!0},lastCompleteRun:{handler(){this.statusCompleteErrorLevel=this.getHighestLevel(this.lastCompleteRun)},immediate:!0}},methods:{getHighestLevel(a){if(null===a)return null;if("cancelled"===a.status)return"info";let e=Math.max(...a.logs.map(a=>a.level));return e>=400?"error":e>=300?"warning":"success"}}}),n(253);let{Component:o}=Shopware,l=Shopware.Utils;o.register("swag-paypal-pos-boolean-radio",{template:'{% block swag_paypal_pos_boolean_radio %}\n    <sw-radio-field\n        v-model:value="castedValue"\n        v-bind="$attrs"\n        class="swag-paypal-pos-boolean-radio"\n        :name="name"\n        :options="options">\n    </sw-radio-field>\n{% endblock %}\n',inject:["feature"],props:{value:{type:Boolean,required:!1,default:!1},optionTrue:{type:Object,required:!0,validator(a){return Object.hasOwn(a,"name")}},optionFalse:{type:Object,required:!0,validator(a){return Object.hasOwn(a,"name")}}},data(){return{inputId:l.createId()}},computed:{options(){return[{value:!0,...this.optionTrue},{value:!1,...this.optionFalse}]},castedValue:{get(){return this.value},set(a){this.$emit("update:value",a)}},name(){return`swag-paypal-pos-boolean-radio-${this.inputId}`}}}),n(8873);let{Component:p,Context:c}=Shopware,{Criteria:r}=Shopware.Data;p.register("swag-paypal-pos-detail-logs",{template:'{% block swag_paypal_pos_detail_logs %}\n    {% block swag_paypal_pos_detail_logs_grid %}\n        <sw-data-grid identifier="swag-paypal-pos-detail-logs"\n                      :columns="columns"\n                      :dataSource="logs"\n                      :isLoading="isLoading || loadingLogs"\n                      :showActions="true"\n                      :showSelection="false"\n                      :showSettings="true"\n                      :allowColumnEdit="true"\n                      :sortBy="sortBy"\n                      :sortDirection="sortDirection"\n                      :skeletonItemAmount="limit"\n                      @column-sort="onSortColumn">\n\n            {% block swag_paypal_pos_detail_logs_grid_pagination %}\n                <template #pagination>\n                    <sw-pagination :limit="limit"\n                                   :page="page"\n                                   :total="total"\n                                   :total-visible="7"\n                                   @page-change="onPageChange">\n                    </sw-pagination>\n                </template>\n            {% endblock %}\n\n            {% block swag_paypal_pos_detail_logs_grid_column_date %}\n                <template #column-date="{ item }">\n\n                    {% block swag_paypal_pos_detail_logs_grid_column_date_formatted %}\n                        <template v-if="item.createdAt">\n                            {{ dateFilter(item.createdAt, {\n                                hour: \'2-digit\',\n                                minute: \'2-digit\',\n                                day: \'2-digit\',\n                                month: \'2-digit\',\n                                year: \'2-digit\'\n                            }) }}\n                        </template>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_detail_logs_grid_column_date_empty %}\n                        <template v-else>\n                            {{ $tc(\'swag-paypal-pos.detail.logs.noEntry\') }}\n                        </template>\n                    {% endblock %}\n\n                </template>\n            {% endblock %}\n\n            {% block swag_paypal_pos_detail_logs_grid_column_state %}\n                <template #column-state="{ item }">\n\n                    {% block swag_paypal_pos_detail_logs_grid_column_state_label %}\n                        <sw-label v-if="item.level"\n                                  appearance="pill"\n                                  :variant="getLabelVariantForItem(item)">\n                            {{ $tc(getLabelForItem(item)) }}\n                        </sw-label>\n                    {% endblock %}\n\n                </template>\n            {% endblock %}\n\n        </sw-data-grid>\n    {% endblock %}\n{% endblock %}\n',inject:["SwagPayPalPosApiService","repositoryFactory"],mixins:[Shopware.Mixin.getByName("notification"),Shopware.Mixin.getByName("swag-paypal-pos-log-label"),Shopware.Mixin.getByName("listing")],props:{runId:{type:String,required:!0}},data(){return{logs:[],limit:10,sortBy:"createdAt",sortDirection:"DESC",loadingLogs:!1,isLoading:!1,disableRouteParams:!0}},computed:{logRepository(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run_log")},columns(){return[{property:"date",dataIndex:"createdAt",label:"swag-paypal-pos.detail.syncedProducts.columns.date",width:"140px",sortable:!0},{property:"state",dataIndex:"level",label:"swag-paypal-pos.detail.syncedProducts.columns.state",width:"120px",sortable:!0},{property:"message",dataIndex:"message",label:"swag-paypal-pos.detail.logs.columnLastSync",sortable:!0}]},dateFilter(){return Shopware.Filter.getByName("date")}},methods:{getListCriteria(){let a=this.getMainListingParams(),e=new r(this.page,this.limit);return e.addFilter(r.equals("runId",this.runId)),e.addAssociation("posSalesChannelRun"),e.addSorting(r.sort(a.sortBy,a.sortDirection,a.naturalSorting)),e.addSorting(r.sort("level","DESC")),e.addSorting(r.sort("createdAt","DESC")),e},getList(){return this.loadingLogs=!0,this.logRepository.search(this.getListCriteria(),c.api).then(a=>{this.logs=a,this.total=a.total,this.page=a.criteria.page,this.limit=a.criteria.limit,this.loadingLogs=!1})},getLabelVariantForItem(a){return a.posSalesChannelRun&&"cancelled"===a.posSalesChannelRun.status?"info":this.getLabelVariant(a.level)},getLabelForItem(a){return a.posSalesChannelRun&&"cancelled"===a.posSalesChannelRun.status?"swag-paypal-pos.detail.logs.states.aborted":this.getLabel(a.level)}}}),n(9794);let{Component:d}=Shopware;d.register("swag-paypal-pos-getting-started",{template:'{% block swag_paypal_pos_getting_started %}\n    <sw-card position-identifier="swag-paypal-pos-getting-started"\n             :title="$tc(\'swag-paypal-pos.gettingStarted.cardTitle\')">\n\n        {% block swag_paypal_pos_getting_started_reader %}\n            <sw-container\n                    class="swag-paypal-pos-getting-started__container-reader"\n                    columns="1fr 3fr"\n                    justify="left"\n                    align="center">\n\n                {% block swag_paypal_pos_getting_started_reader_image %}\n                    <img class="swag-paypal-pos-getting-started__image"\n                         :src="assetFilter(\'swagpaypal/static/img/paypal-pos-reader.png\')"\n                         :alt="$tc(\'swag-paypal-pos.gettingStarted.readerImageAlt\')"/>\n                {% endblock %}\n\n                {% block swag_paypal_pos_getting_started_reader_description %}\n                    <div class="swag-paypal-pos-getting-started__description">\n\n                        {% block swag_paypal_pos_getting_started_reader_description_headline %}\n                            <div class="swag-paypal-pos-getting-started__description-headline">\n                                {{ $tc(\'swag-paypal-pos.gettingStarted.readerHeadline\') }}\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_getting_started_reader_description_text %}\n                            <div class="swag-paypal-pos-getting-started__description-text">\n                                {{ $tc(\'swag-paypal-pos.gettingStarted.readerText\') }}\n\n                                {% block swag_paypal_pos_getting_started_reader_description_link %}\n                                    <sw-external-link :href="$tc(\'swag-paypal-pos.gettingStarted.readerLinkTarget\')"\n                                                      class="swag-paypal-pos-getting-started__description-text-link">\n                                        {{ $tc(\'swag-paypal-pos.gettingStarted.readerLinkText\') }}\n                                    </sw-external-link>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n\n        {% block swag_paypal_pos_getting_started_app %}\n            <sw-container\n                    class="swag-paypal-pos-getting-started__container-app"\n                    columns="1fr 3fr"\n                    justify="left"\n                    align="center">\n\n                {% block swag_paypal_pos_getting_started_app_image %}\n                    <img class="swag-paypal-pos-getting-started__image"\n                         :src="assetFilter(\'swagpaypal/static/img/paypal-pos-app.png\')"\n                         :alt="$tc(\'swag-paypal-pos.gettingStarted.appImageAlt\')"/>\n                {% endblock %}\n\n                {% block swag_paypal_pos_getting_started_app_description %}\n                    <div class="swag-paypal-pos-getting-started__description ">\n\n                        {% block swag_paypal_pos_getting_started_app_description_headline %}\n                            <div class="swag-paypal-pos-getting-started__description-headline">\n                                {{ $tc(\'swag-paypal-pos.gettingStarted.appHeadline\') }}\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_getting_started_app_description_text %}\n                            <div v-html="$tc(\'swag-paypal-pos.gettingStarted.appText\')"\n                                 class="swag-paypal-pos-getting-started__description-text">\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}}),n(863);let{Component:u}=Shopware;u.register("swag-paypal-pos-continue-setup",{template:"{% block swag_paypal_pos_continue_setup %}\n    <sw-card position-identifier=\"swag-paypal-pos-continue-setup\"\n             :title=\"$tc('swag-paypal-pos.detail.overview.continueSetup.cardTitle')\">\n\n        {% block swag_paypal_pos_continue_setup_container %}\n            <div class=\"swag-paypal-pos__continue-setup\">\n\n                {% block swag_paypal_pos_continue_setup_container_headline %}\n                    <h6>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.headline') }}</h6>\n                {% endblock %}\n\n                {% block swag_paypal_pos_continue_setup_container_firstLine %}\n                    <p>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.firstLine') }}</p>\n                {% endblock %}\n\n                {% block swag_paypal_pos_continue_setup_container_secondLine %}\n                    <p>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.secondLine') }}</p>\n                {% endblock %}\n\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_continue_setup_button %}\n            <sw-button variant=\"ghost\"\n                       @click=\"onContinueSetup\">\n                {{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.headline') }}\n            </sw-button>\n        {% endblock %}\n\n    </sw-card>\n{% endblock %}\n",methods:{onContinueSetup(){this.$router.push({name:"swag.paypal.pos.wizard.customization",params:{id:this.$route.params.id}})}}}),n(5501);var g=n(1447);let{Component:_}=Shopware;_.override("sw-sales-channel-menu",{computed:{buildMenuTree(){let a=this.$super("buildMenuTree"),e=[];return this.salesChannels.forEach(a=>{a.type.id===g.c8&&e.push(a.id)}),a.forEach(a=>{e.includes(a.id)&&(a.path="swag.paypal.pos.detail")}),a}}});let{Component:h}=Shopware;h.override("sw-sales-channel-modal",{methods:{onAddChannel(a){if(this.isPayPalPosSalesChannel(a)){this.onCloseModal(),this.$router.push({name:"swag.paypal.pos.wizard"});return}this.$super("onAddChannel",a)},isPayPalPosSalesChannel(a){return a===g.c8}}}),n(6471);let{Component:w}=Shopware,{Criteria:y}=Shopware.Data;w.register("swag-paypal-pos",{template:'{% block swag_paypal_pos %}\n    <sw-page class="swag-paypal-pos">\n\n        {% block swag_paypal_pos_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $tc(\'swag-paypal-pos.header\') }}\n                </h2>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_actions %}\n            <template #smart-bar-actions>\n                <sw-button v-for="button in buttonConfig"\n                           size="small"\n                           :disabled="button.disabled"\n                           :isLoading="button.isLoading || isLoading"\n                           :variant="button.variant"\n                           @click="onButtonClick(button.action)">\n                    {{ button.label }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_content %}\n            <template #content>\n                <sw-card-view>\n\n                    {% block swag_paypal_pos_content_tabs %}\n                        <sw-tabs v-if="!isLoading" position-identifier="swag_paypal_pos_content_tabs" class="swag-paypal-pos__tabs">\n\n                            {%  block swag_paypal_pos_content_tab_base %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.overview\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.overview\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.overview\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_synced_products %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.syncedProducts\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.syncedProducts\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.syncedProducts\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_settings %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.settings\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.settings\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.settings\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_runs %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.runs\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.runs\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.runs\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_help %}\n                                <sw-tabs-item href="https://www.izettle.com/help/articles/1083274-what-is-pos"\n                                              target="_blank"\n                                              class="swag-paypal-pos__tab-help"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.help\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.help\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n                        </sw-tabs>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_content_account %}\n                        <swag-paypal-pos-account :lastRun="lastRun"\n                                                 :salesChannel="salesChannel">\n                        </swag-paypal-pos-account>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_content_card %}\n                            <router-view\n                              v-if="!isLoading"\n                              :key="$route.params.id"\n                              v-slot="{ Component }">\n                               <component\n                                   :is="Component"\n                                   :salesChannel="salesChannel"\n                                   :cloneSalesChannelId="cloneSalesChannelId"\n                                   :lastRun="lastRun"\n                                   :lastCompleteRun="lastCompleteRun"\n                                   @buttons-update="updateButtons"\n                                   @load-sales-channel="loadSalesChannel"\n                                   @run-update="loadLastRun"\n                                   @update-clone-sales-channel="updateCloneSalesChannel"\n                               />\n                            </router-view>\n\n                        <sw-loader v-if="isLoading"></sw-loader>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_disclaimer_hero %}\n                        <sw-card v-show="!isLoading"\n                                 class="swag-paypal-pos__disclaimer-card"\n                                 position-identifier="swag-paypal-pos-disclaimer"\n                                 :hero="true">\n\n                            {% block swag_paypal_pos_disclaimer_container %}\n                                <div class="swag-paypal-pos__disclaimer">\n\n                                    {% block swag_paypal_pos_disclaimer_title %}\n                                        <div class="swag-paypal-pos__disclaimer-title disclaimer-content">\n                                            {{ $tc(\'swag-paypal-pos.detail.disclaimer.headline\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_disclaimer_subtitle %}\n                                        <div class="swag-paypal-pos__disclaimer-subtitle disclaimer-content">\n                                            {{ $tc(\'swag-paypal-pos.detail.disclaimer.subheadline\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_disclaimer_link %}\n                                        <a :href="$tc(\'swag-paypal-pos.detail.disclaimer.linkTarget\')"\n                                           class="link swag-paypal-pos__disclaimer-link disclaimer-content"\n                                           target="_blank">\n                                            {{ $tc(\'swag-paypal-pos.detail.disclaimer.linkText\') }}\n                                        </a>\n                                    {% endblock %}\n                                </div>\n                            {% endblock %}\n                        </sw-card>\n                    {% endblock %}\n                </sw-card-view>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["salesChannelService","repositoryFactory"],mixins:[Shopware.Mixin.getByName("placeholder")],data(){return{isLoading:!1,previousApiKey:null,salesChannel:{},lastRun:null,lastCompleteRun:null,cloneSalesChannelId:null,buttonConfig:[]}},metaInfo(){return{title:this.title}},computed:{title(){return[this.$tc("global.sw-admin-menu.textShopwareAdmin"),this.$tc("sw-sales-channel.general.titleMenuItems"),this.$tc("swag-paypal-pos.general.moduleTitle")].reverse().join(" | ")},paypalPosSalesChannelRepository(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel")},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},runRepository(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")},salesChannelCriteria(){let a=new y(1,500);return a.addAssociation(g.m7),a.addAssociation("countries"),a.addAssociation("currencies"),a.addAssociation("domains"),a.addAssociation("languages"),a}},watch:{"$route.params.id"(){this.loadSalesChannel()}},created(){this.createdComponent()},methods:{createdComponent(){this.loadSalesChannel()},loadSalesChannel(){return this.$route.params.id?(this.salesChannel&&(this.salesChannel=null),this.isLoading=!0,this.salesChannelRepository.get(this.$route.params.id,Shopware.Context.api,this.salesChannelCriteria).then(a=>{this.salesChannel=a,this.previousApiKey=a.extensions.paypalPosSalesChannel.apiKey,this.updateRun(),this.isLoading=!1})):Promise.resolve()},updateCloneSalesChannel(a){this.cloneSalesChannelId=a},updateButtons(a){this.buttonConfig=a},onButtonClick(a){if("string"==typeof a){this.redirect(a);return}"function"==typeof a&&a.call()},updateRun(){return setTimeout(this.updateRun,2e4),this.loadLastRun()},loadLastRun(a=!1){let e=new y(1,1);return e.addFilter(y.equals("salesChannelId",this.salesChannel.id)),e.addFilter(y.not("AND",[y.equals("status","in_progress")])),e.addSorting(y.sort("createdAt","DESC")),a?e.addFilter(y.equals("task","complete")):e.addAssociation("logs"),this.runRepository.search(e,Shopware.Context.api).then(e=>{if(a){this.lastCompleteRun=e.first(),this.$forceUpdate();return}this.lastRun=e.first(),null!==this.lastRun&&"complete"!==this.lastRun.task?this.loadLastRun(!0):this.lastCompleteRun=this.lastRun,this.$forceUpdate()})}}}),n(8780);let{Component:m}=Shopware;m.register("swag-paypal-pos-detail-synced-products",{template:'{% block swag_paypal_pos_synced_products %}\n    <div class="swag-paypal-pos-detail-synced-products">\n\n        {% block swag_paypal_pos_synced_products_grid %}\n            <sw-card position-identifier="swag-paypal-pos-synced-products-grid"\n                     :title="$tc(\'swag-paypal-pos.detail.syncedProducts.title\')"\n                     :isLoading="isLoading">\n\n                {% block swag_paypal_pos_synced_products_grid %}\n                    <template #grid>\n                        <sw-data-grid v-if="total > 0"\n                                      identifier="swag-paypal-pos-detail-synced-products"\n                                      :dataSource="products"\n                                      :columns="columns"\n                                      :isLoading="isLoading"\n                                      :showActions="actions.length > 0"\n                                      :showSelection="false"\n                                      :showSettings="true"\n                                      :allowColumnEdit="true"\n                                      :sortBy="sortBy"\n                                      :sortDirection="sortDirection"\n                                      :skeletonItemAmount="limit"\n                                      @column-sort="onSortColumn">\n\n                            {% block swag_paypal_pos_synced_products_grid_pagination %}\n                                <template #pagination>\n                                    <sw-pagination :limit="limit"\n                                                   :page="page"\n                                                   :total="total"\n                                                   :total-visible="7"\n                                                   @page-change="onPageChange">\n                                    </sw-pagination>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_synced_products_grid_column_date %}\n                                <template #column-date="{ item }">\n\n                                    {% block swag_paypal_pos_synced_products_grid_column_date_formatted %}\n                                        <template v-if="hasSync(item)">\n                                            {{ dateFilter(getSyncDate(item), {\n                                                hour: \'2-digit\',\n                                                minute: \'2-digit\',\n                                                day: \'2-digit\',\n                                                month: \'2-digit\',\n                                                year: \'2-digit\'\n                                            }) }}\n                                        </template>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_synced_products_grid_column_date_empty %}\n                                        <template v-else>\n                                            {{ $tc(\'swag-paypal-pos.detail.syncedProducts.notSyncedYet\') }}\n                                        </template>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_synced_products_grid_column_state %}\n                                <template #column-state="{ item }">\n\n                                    {% block swag_paypal_pos_synced_products_grid_column_state_label_log %}\n                                        <template v-if="hasSync(item)">\n                                            <sw-label appearance="pill"\n                                                      :variant="getLabelVariant(getLevel(item))">\n                                                {{ $tc(getLabel(getLevel(item))) }}\n                                            </sw-label>\n                                        </template>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_synced_products_grid_actions %}\n                                <template v-if="actions"\n                                          #actions="{ item }">\n                                    <sw-context-menu-item v-for="action in actions"\n                                                          @click="action.callback(item)">\n                                        {{ $tc(action.label) }}\n                                    </sw-context-menu-item>\n                                </template>\n                            {% endblock %}\n\n                        </sw-data-grid>\n                    </template>\n                {% endblock %}\n\n                {% block swag_paypal_pos_synced_products_empty_state %}\n                    <sw-empty-state v-if="total < 1"\n                                    class="swag-paypal-pos-detail-synced-products__empty-state"\n                                    :title="$tc(\'swag-paypal-pos.detail.syncedProducts.emptyState.title\')"\n                                    :subline="$tc(\'swag-paypal-pos.detail.syncedProducts.emptyState.message\')">\n                    </sw-empty-state>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosApiService"],mixins:[Shopware.Mixin.getByName("swag-paypal-pos-log-label"),Shopware.Mixin.getByName("listing")],props:{salesChannel:{type:Object,required:!0}},data(){return{products:[],limit:10,isLoading:!1,actions:[{label:"swag-paypal-pos.detail.syncedProducts.actions.productDetails",callback:this.onProductDetails}],columns:[{property:"name",label:"swag-paypal-pos.detail.syncedProducts.columns.name",sortable:!1},{property:"state",label:"swag-paypal-pos.detail.syncedProducts.columns.state",sortable:!1},{property:"date",label:"swag-paypal-pos.detail.syncedProducts.columns.date",sortable:!1}]}},created(){this.createdComponent()},computed:{dateFilter(){return Shopware.Filter.getByName("date")}},methods:{createdComponent(){this.$emit("buttons-update",[]),this.getList()},getList(){if(null===this.salesChannel||null===this.salesChannel.id)return Promise.resolve();this.isLoading=!0;let a=this.getMainListingParams();return this.SwagPayPalPosApiService.getProductLog(this.salesChannel.id,a.page,a.limit).then(a=>{this.products=Object.values(a.elements),this.total=a.total,this.isLoading=!1})},onProductDetails(a){this.$router.push({name:"sw.product.detail.base",params:{id:a.id}})},hasSync(a){return a.extensions.paypalPosLog.length||a.extensions.paypalPosSync.length},getSyncDate(a){return this.hasSync(a)?a.extensions.paypalPosLog[0]?a.extensions.paypalPosLog[0].posSalesChannelRun.updatedAt||a.extensions.paypalPosLog[0].createdAt:a.extensions.paypalPosSync[0].updatedAt||a.extensions.paypalPosSync[0].createdAt:null},getLevel(a){return a.extensions.paypalPosLog[0]?a.extensions.paypalPosLog[0].level:200}}}),n(6646);let{Component:b}=Shopware,{Criteria:v}=Shopware.Data;b.register("swag-paypal-pos-detail-overview",{template:'{% block swag_paypal_pos_detail_overview %}\n    <div class="sw-sales-channel-detail-overview">\n\n\n        {% block swag_paypal_pos_detail_overview_status %}\n            <swag-paypal-pos-status-view\n                    v-if="salesChannel.active"\n                    :isLoading="isLoading"\n                    :isSyncing="isSyncing"\n                    :lastCompleteRun="lastCompleteRun"\n                    :lastFinishedRun="lastRun"\n                    :salesChannel="salesChannel"\n                    :syncErrors="syncErrors">\n\n                {% block swag_paypal_pos_detail_overview_status_actions %}\n                    <template #actions>\n                        <sw-button-group v-if="salesChannel && salesChannel.active && !isSyncing">\n\n                            {% block swag_paypal_pos_detail_overview_status_actions_sync_button %}\n                                <sw-button class="swag-paypal-pos-detail-overview__sync-button"\n                                           variant="primary"\n                                           @click="onStartSync">\n                                    {{ $tc(\'swag-paypal-pos.detail.overview.buttonSync\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu %}\n                                <sw-context-button>\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_button %}\n                                        <template #button>\n                                            <sw-button class="swag-paypal-pos-detail-overview__sync-button-context"\n                                                       variant="primary"\n                                                       square\n                                                       :disabled="isSyncing">\n                                                <sw-icon name="regular-chevron-down-xs" size="16"></sw-icon>\n                                            </sw-button>\n                                        </template>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_products %}\n                                        <sw-context-menu-item @click="onStartProductSync">\n                                            {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncProducts\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_image %}\n                                        <sw-context-menu-item @click="onStartImageSync">\n                                            {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncImages\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_inventory %}\n                                        <sw-context-menu-item @click="onStartInventorySync">\n                                            {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncInventory\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n                                </sw-context-button>\n                            {% endblock %}\n                        </sw-button-group>\n\n                        {% block swag_paypal_pos_detail_overview_status_actions_sync_abort_button %}\n                            <sw-button v-if="isSyncing"\n                                       @click="onSyncAbort">\n                                {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncAbort\') }}\n                            </sw-button>\n                        {% endblock %}\n                    </template>\n                {% endblock %}\n            </swag-paypal-pos-status-view>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_overview_setup %}\n            <swag-paypal-pos-continue-setup v-else>\n            </swag-paypal-pos-continue-setup>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_overview_getting_started %}\n            <swag-paypal-pos-getting-started>\n            </swag-paypal-pos-getting-started>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosApiService","salesChannelService","repositoryFactory"],mixins:[Shopware.Mixin.getByName("placeholder")],props:{salesChannel:{type:Object,required:!1,default:null},lastRun:{type:Object,required:!1,default:null},lastCompleteRun:{type:Object,required:!1,default:null}},data(){return{isSyncing:!1,syncErrors:null,syncingRunId:null,statusErrorLevel:null,isLoading:!1}},computed:{runRepository(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")}},watch:{"salesChannel.id"(){this.checkForSync()},lastRun(){this.$forceUpdate()}},created(){this.createdComponent()},mounted(){this.mountedComponent()},methods:{createdComponent(){this.checkForSync()},mountedComponent(){this.updateButtons()},forceUpdate(){this.$forceUpdate()},startSync(a){this.syncErrors=null,this.isSyncing=!0,this.updateButtons(!0),a(this.salesChannel.id).then(a=>{this.syncingRunId=a.runId,this.updateSync()}).catch(a=>{this.syncErrors=a.response.data.errors,this.$emit("run-update"),this.isSyncing=!1,this.updateButtons()})},updateSync(){null!==this.syncingRunId&&this.runRepository.get(this.syncingRunId,Shopware.Context.api).then(a=>{if(null!==a&&"in_progress"===a.status){setTimeout(this.updateSync,1500);return}this.syncingRunId=null,this.$emit("run-update"),this.isSyncing=!1,this.updateButtons()})},onStartSync(){this.startSync(this.SwagPayPalPosApiService.startCompleteSync.bind(this.SwagPayPalPosApiService))},onStartProductSync(){this.startSync(this.SwagPayPalPosApiService.startProductSync.bind(this.SwagPayPalPosApiService))},onStartImageSync(){this.startSync(this.SwagPayPalPosApiService.startImageSync.bind(this.SwagPayPalPosApiService))},onStartInventorySync(){this.startSync(this.SwagPayPalPosApiService.startInventorySync.bind(this.SwagPayPalPosApiService))},onSyncAbort(){null!==this.syncingRunId&&this.SwagPayPalPosApiService.abortSync(this.syncingRunId).then(()=>{this.updateSync()})},checkForSync(){if(null===this.salesChannel||null===this.salesChannel.id)return;let a=new v(1,1);a.addFilter(v.equals("salesChannelId",this.salesChannel.id)),a.addFilter(v.equals("status","in_progress")),a.addSorting(v.sort("createdAt","DESC")),this.runRepository.search(a,Shopware.Context.api).then(a=>{null!==a.first()&&(this.isSyncing=!0,this.syncingRunId=a.first().id,this.updateSync())})},updateButtons(a=!1){let e=[{key:"sync",label:this.$tc("swag-paypal-pos.detail.overview.buttonSync"),variant:"primary",action:this.onStartSync,disabled:!(this.salesChannel&&this.salesChannel.active),isLoading:this.isSyncing}];a&&e.unshift({key:"abortSync",label:this.$tc("swag-paypal-pos.detail.overview.buttonSyncAbort"),action:this.onSyncAbort,disabled:!(this.salesChannel&&this.salesChannel.active)}),this.$emit("buttons-update",e)}}}),n(6090);let{Component:k,Context:f,State:S}=Shopware,{mapPropertyErrors:C}=k.getComponentHelper(),{ShopwareError:$}=Shopware.Classes;k.register("swag-paypal-pos-detail-settings",{template:'{% block swag_paypal_pos_detail_settings %}\n    <div class="swag-paypal-pos-detail-settings">\n\n        {% block swag_paypal_pos_detail_settings_alert %}\n            <sw-alert class="swag-paypal-pos-detail-settings__save-alert">\n                {{ $tc(\'swag-paypal-pos.detail.settings.saveAlert\') }}\n            </sw-alert>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_basic %}\n            <sw-card position-identifier="swag-paypal-pos-detail-settings-basic"\n                     :isLoading="isLoading"\n                     :title="$tc(\'swag-paypal-pos.detail.settings.titleGeneralSettings\')">\n                <sw-container columns="1fr 200px" gap="0px 30px">\n\n                    {% block swag_paypal_pos_detail_settings_input_name %}\n                        <sw-text-field\n                                v-model:value="salesChannel.name"\n                                required\n                                type="text"\n                                validation="required"\n                                :error="salesChannelNameError"\n                                :disabled="!acl.can(\'sales_channel.editor\')"\n                                :label="$tc(\'sw-sales-channel.detail.labelInputName\')"\n                                :placeholder="placeholder(salesChannel, \'name\', $tc(\'sw-sales-channel.detail.placeholderName\'))">\n                        </sw-text-field>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_detail_settings_input_active %}\n                        <sw-switch-field\n                                v-model:value="salesChannel.active"\n                                bordered\n                                :disabled="!acl.can(\'sales_channel.editor\')"\n                                :label="$tc(\'sw-sales-channel.detail.labelInputActive\')"\n                                :helpText="$tc(\'swag-paypal-pos.detail.settings.activeHelpText\')">\n                        </sw-switch-field>\n                    {% endblock %}\n\n                </sw-container>\n\n                {% block swag_paypal_pos_detail_settings_input_media_domain %}\n                    <swag-paypal-pos-url-field\n                            v-model:value="swagPaypalPosSalesChannel.mediaDomain"\n                            required\n                            validation="required"\n                            :error="swagPaypalPosSalesChannelMediaDomainError"\n                            :disabled="!acl.can(\'sales_channel.editor\')"\n                            :label="$tc(\'swag-paypal-pos.detail.settings.domain\')"\n                            :helpText="$tc(\'swag-paypal-pos.detail.settings.domainHelpText\')"\n                            @update:value="forceUpdate">\n                    </swag-paypal-pos-url-field>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_settings_input_language %}\n                    <sw-entity-single-select\n                            v-model:value="salesChannel.languageId"\n                            entity="language"\n                            required\n                            :disabled="!acl.can(\'sales_channel.editor\')"\n                            :label="$tc(\'global.entities.language\')"\n                            @update:value="changeLanguage">\n                    </sw-entity-single-select>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_settings_input_product_stream %}\n                    {# ToDo PPI-56 - implement support for product streams #}\n                    <sw-entity-single-select\n                            v-if="false"\n                            v-model:value="swagPaypalPosSalesChannel.productStreamId"\n                            entity="product_stream"\n                            :disabled="!acl.can(\'sales_channel.editor\')"\n                            :label="$tc(\'swag-paypal-pos.detail.settings.productStream\')"\n                            @update:value="forceUpdate">\n                    </sw-entity-single-select>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_sync %}\n            <div class="sw-sales-channel-detail-sync">\n                <sw-card position-identifier="swag-paypal-pos-detail-settings-sync"\n                         :isLoading="isLoading"\n                         :title="$tc(\'swag-paypal-pos.detail.settings.titleSync\')">\n\n                    {% block swag_paypal_pos_detail_settings_sync_input %}\n                        <sw-radio-field\n                            v-model:value="salesChannel.extensions.paypalPosSalesChannel.replace"\n                            :label="$tc(\'swag-paypal-pos.wizard.syncLibrary.description\')"\n                            class="swag-paypal-pos-boolean-radio"\n                            :options="optionsReplace"\n                            :disabled="!acl.can(\'sales_channel.editor\')"\n                            @update:value="forceUpdate">\n                        </sw-radio-field>\n                    {% endblock %}\n\n                </sw-card>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_prices %}\n            <div class="sw-sales-channel-detail-prices">\n                <sw-card position-identifier="swag-paypal-pos-detail-settings-prices"\n                         :isLoading="isLoading"\n                         :title="$tc(\'swag-paypal-pos.detail.settings.titlePrices\')">\n\n                    {% block swag_paypal_pos_detail_settings_prices_input %}\n                        <swag-paypal-pos-boolean-radio\n                            v-model:value="swagPaypalPosSalesChannel.syncPrices"\n                            class="swag-paypal-pos-detail-settings__sync-prices-input"\n                            :label="$tc(\'swag-paypal-pos.wizard.syncPrices.description\')"\n                            :optionTrue="optionSyncPrices"\n                            :optionFalse="optionNotSyncPrices"\n                            :disabled="!acl.can(\'sales_channel.editor\')"\n                            @update:value="forceUpdate">\n                        </swag-paypal-pos-boolean-radio>\n                    {% endblock %}\n\n                </sw-card>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_credentials %}\n            <div class="sw-sales-channel-detail-credentials">\n                <sw-card position-identifier="swag-paypal-pos-detail-settings-credentials"\n                         :isLoading="isLoading"\n                         :title="$tc(\'swag-paypal-pos.detail.settings.titleCredentials\')">\n\n                    {% block swag_paypal_pos_detail_settings_credentials_apikey %}\n                        <sw-password-field\n                                v-model:value="swagPaypalPosSalesChannel.apiKey"\n                                class="swag-paypal-pos-detail-settings__apikey-field"\n                                required\n                                :label="$tc(\'swag-paypal-pos.authentication.labelApiKey\')"\n                                :disabled="!acl.can(\'sales_channel.editor\')"\n                                :placeholder="$tc(\'swag-paypal-pos.authentication.placeholderApiKey\')"\n                                @update:value="forceUpdate">\n                            <template #suffix>\n\n                                {% block swag_paypal_pos_detail_settings_credentials_apikey_suffix %}\n                                    <sw-icon name="regular-low-vision"\n                                             class="swag-paypal-pos-detail-settings__apikey-suffix"\n                                             size="22px">\n                                    </sw-icon>\n                                {% endblock %}\n                            </template>\n                        </sw-password-field>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_detail_settings_credentials_apikey_description %}\n                        <div class="swag-paypal-pos-detail-settings__apikey-description">\n\n                            {% block swag_paypal_pos_detail_settings_credentials_apikey_description_text %}\n                                <div class="swag-paypal-pos-detail-settings__apikey-description-text">\n                                    {{ $tc(\'swag-paypal-pos.authentication.apiKeyDescription\') }}\n                                </div>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_settings_credentials_apikey_description_link %}\n                                <sw-external-link v-if="acl.can(\'sales_channel.editor\')"\n                                                  :href="apiKeyUrl"\n                                                  class="swag-paypal-pos-detail-settings__apikey-description-link">\n\n                                    {% block swag_paypal_pos_detail_settings_credentials_apikey_description_link_text %}\n                                        {{ $tc(\'swag-paypal-pos.authentication.buttonGenerateKey\') }}\n                                    {% endblock %}\n                                </sw-external-link>\n                            {% endblock %}\n                        </div>\n                    {% endblock %}\n\n                </sw-card>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_options %}\n            <sw-card position-identifier="swag-paypal-pos-detail-settings-options"\n                     :title="$tc(\'swag-paypal-pos.detail.settings.optionsTitle\')"\n                     :isLoading="isLoading">\n                <template #grid>\n                    <sw-container rows="auto auto">\n\n                        {% block swag_paypal_pos_detail_settings_options_reset %}\n                            <sw-card-section>\n                                <sw-container columns="1fr 175px" gap="0px 30px" class="swag-paypal-pos-detail-settings__reset-sync">\n\n                                    {% block sw_sales_channel_detail_base_options_reset_text %}\n                                        <div class="swag-paypal-pos-detail-settings__options-description-text">\n                                            {{ $tc(\'swag-paypal-pos.detail.settings.reset.descriptionText\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block sw_sales_channel_detail_base_options_reset_button %}\n                                        <div class="swag-paypal-pos-detail-settings__options-button">\n                                            <sw-button size="small"\n                                                       :disabled="!acl.can(\'sales_channel.editor\')"\n                                                       @click="showResetModal = true">\n                                                {{ $tc(\'swag-paypal-pos.detail.settings.reset.buttonTitle\') }}\n                                            </sw-button>\n                                        </div>\n                                    {% endblock %}\n\n                                </sw-container>\n                            </sw-card-section>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_detail_settings_options_delete %}\n                            <sw-card-section divider="top">\n                                <sw-container columns="1fr 175px" gap="0px 30px" class="sw-sales-channel-detail-settings__delete-sales-channel">\n\n                                    {% block sw_sales_channel_detail_base_options_delete_text %}\n                                        <div class="swag-paypal-pos-detail-settings__options-description-text">\n                                            <strong>{{ $tc(\'global.default.warning\') }}</strong>\n                                            {{ $tc(\'sw-sales-channel.detail.textDeleteSalesChannelWarning\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block sw_sales_channel_detail_base_options_delete_button %}\n                                        <div class="swag-paypal-pos-detail-settings__options-button">\n                                            <sw-button\n                                                variant="danger"\n                                                size="small"\n                                                :disabled="!acl.can(\'sales_channel.deleter\')"\n                                                @click="showDeleteModal = true">\n                                                {{ $tc(\'sw-sales-channel.detail.buttonDelete\') }}\n                                            </sw-button>\n                                        </div>\n                                    {% endblock %}\n\n                                </sw-container>\n                            </sw-card-section>\n                        {% endblock %}\n\n                    </sw-container>\n                </template>\n\n                {% block swag_paypal_pos_detail_settings_options_reset_modal %}\n                    <sw-modal v-if="showResetModal"\n                              class="swag-paypal-pos-detail-settings__reset-sync-modal"\n                              ref="modal"\n                              variant="small"\n                              :title="$tc(\'swag-paypal-pos.detail.settings.reset.modalTitle\')"\n                              @modal-close="showResetModal = false">\n\n                        {% block swag_paypal_pos_detail_settings_options_reset_modal_confirmtext %}\n                            <p class="swag-paypal-pos-detail-settings__reset-modal-confirm-text">\n                                {{ $tc(\'swag-paypal-pos.detail.settings.reset.modalConfirmText\') }}\n                            </p>\n                            <p class="swag-paypal-pos-detail-settings__reset-modal-name">\n                                <strong>{{ placeholder(salesChannel, \'name\') }}</strong>\n                            </p>\n                            <p>{{ $tc(\'swag-paypal-pos.detail.settings.reset.modalTextInfo\') }}</p>\n                        {% endblock %}\n\n                        {% block sw_sales_channel_detail_options_reset_modal_footer %}\n                            <template #modal-footer>\n\n                                {% block swag_paypal_pos_detail_settings_options_reset_modal_abort %}\n                                    <sw-button size="small" @click="showResetModal = false">\n                                        {{ $tc(\'global.default.cancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_detail_settings_options_reset_modal_confirm %}\n                                    <sw-button size="small"\n                                               variant="danger"\n                                               @click="onConfirmReset">\n                                        {{ $tc(\'swag-paypal-pos.detail.settings.reset.modalButtonConfirm\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                            </template>\n                        {% endblock %}\n\n                    </sw-modal>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_settings_options_delete_modal %}\n                    <sw-modal v-if="showDeleteModal"\n                              class="sw-sales-channel-detail-settings__delete-modal"\n                              ref="modal"\n                              variant="small"\n                              :title="$tc(\'sw-sales-channel.detail.deleteModalTitle\')"\n                              @modal-close="showDeleteModal = false">\n\n                        {% block swag_paypal_pos_detail_settings_options_delete_modal_confirmtext %}\n                            <p class="sw-sales-channel-detail-settings__delete-modal-confirm-text">\n                                {{ $tc(\'sw-sales-channel.detail.textConfirmDelete\') }}\n                            </p>\n                            <p class="sw-sales-channel-detail-settings__delete-modal-name">\n                                <strong>{{ placeholder(salesChannel, \'name\') }}</strong>\n                            </p>\n                            <p>{{ $tc(\'sw-sales-channel.detail.textDeleteInfo\') }}</p>\n                        {% endblock %}\n\n                        {% block sw_sales_channel_detail_options_delete_modal_footer %}\n                            <template #modal-footer>\n\n                                {% block swag_paypal_pos_detail_settings_options_delete_modal_abort %}\n                                    <sw-button size="small" @click="showDeleteModal = false">\n                                        {{ $tc(\'global.default.cancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_detail_settings_options_delete_modal_confirm %}\n                                    <sw-button size="small"\n                                               variant="danger"\n                                               @click="onConfirmDelete">\n                                        {{ $tc(\'sw-sales-channel.detail.buttonConfirmDelete\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                            </template>\n                        {% endblock %}\n\n                    </sw-modal>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosApiService","SwagPayPalPosSettingApiService","SwagPayPalPosWebhookRegisterService","salesChannelService","repositoryFactory","acl"],mixins:[Shopware.Mixin.getByName("swag-paypal-pos-catch-error"),Shopware.Mixin.getByName("placeholder"),Shopware.Mixin.getByName("notification")],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null}},data(){return{isLoading:!1,showDeleteModal:!1,showResetModal:!1,isSaveSuccessful:!1,isTestingCredentials:!1,isTestCredentialsSuccessful:!1,apiKeyUrl:this.SwagPayPalPosSettingApiService.generateApiUrl(),previousApiKey:this.salesChannel.extensions.paypalPosSalesChannel.apiKey}},computed:{...C("salesChannel",["name"]),...C("swagPaypalPosSalesChannel",["mediaDomain"]),salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},optionSyncPrices(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueDescription")}},optionNotSyncPrices(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseDescription")}},optionsReplace(){return[{value:2,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyDescription")},{value:1,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeDescription")},{value:0,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotDescription")}]},swagPaypalPosSalesChannel(){return this.salesChannel.extensions.paypalPosSalesChannel}},mounted(){this.mountedComponent()},methods:{mountedComponent(){this.updateButtons()},forceUpdate(){this.$forceUpdate()},onSave(){return(this.isLoading=!0,this.isSaveSuccessful=!1,this.updateButtons(),this.swagPaypalPosSalesChannel.apiKey===this.previousApiKey)?this.save():this.SwagPayPalPosSettingApiService.validateApiCredentials(this.swagPaypalPosSalesChannel.apiKey,this.salesChannel.id).then(()=>this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel,!0)).then(this.save).catch(a=>{throw this.catchAuthenticationError(a),this.isLoading=!1,this.updateButtons(),a})},save(){return this.SwagPayPalPosWebhookRegisterService.registerWebhook(this.salesChannel.id).catch(this.catchError.bind(this,"swag-paypal-pos.messageWebhookRegisterError")),this.salesChannelRepository.save(this.salesChannel,f.api).then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0,this.updateButtons(),this.$emit("load-sales-channel"),this.$root.$emit("sales-channel-change"),null!==this.cloneSalesChannelId&&this.SwagPayPalPosSettingApiService.cloneProductVisibility(this.cloneSalesChannelId,this.salesChannel.id).catch(this.catchError.bind(this,"swag-paypal-pos.messageCloneError"))}).catch(()=>{this.isLoading=!1,this.updateButtons(),this.createNotificationError({message:this.$tc("sw-sales-channel.detail.messageSaveError",0,{name:this.salesChannel.name||this.placeholder(this.salesChannel,"name")})})}).finally(()=>{if(null===this.swagPaypalPosSalesChannel.mediaDomain){let a=`swag_paypal_pos_sales_channel.${this.swagPaypalPosSalesChannel.id}.mediaDomain`,e=new $({code:"INVALID_URL"});S.commit("error/addApiError",{expression:a,error:e})}})},testCredentials(){let a=this.swagPaypalPosSalesChannel.apiKey;this.isTestingCredentials=!0,this.isTestCredentialsSuccessful=!1,this.SwagPayPalPosSettingApiService.validateApiCredentials(a).then(a=>{let e=a.credentialsValid;this.isTestingCredentials=!1,this.isTestCredentialsSuccessful=e}).catch(a=>{this.catchAuthenticationError(a),this.isTestingCredentials=!1})},catchAuthenticationError(a){this.catchError("swag-paypal-pos.authentication.messageTestError",a),this.isTestingCredentials=!1,this.isTestCredentialsSuccessful=!1},updateButtons(){let a=[{key:"save",label:this.$tc("global.default.save"),variant:"primary",action:this.onSave,disabled:!1,isLoading:this.isLoading}];this.$emit("buttons-update",a)},onConfirmDelete(){this.showDeleteModal=!1,this.$nextTick(()=>{this.deleteSalesChannel(this.salesChannel.id),this.$router.push({name:"sw.dashboard.index"})})},deleteSalesChannel(a){return this.SwagPayPalPosWebhookRegisterService.unregisterWebhook(a).finally(()=>this.salesChannelRepository.delete(a,Shopware.Context.api).then(()=>{this.$root.$emit("sales-channel-change")}))},onConfirmReset(){this.showResetModal=!1,this.$nextTick(()=>{this.SwagPayPalPosApiService.resetSync(this.salesChannel.id).then(()=>{this.$router.push({name:"swag.paypal.pos.detail.overview",params:{id:this.salesChannel.id}})})})},changeLanguage(){this.$nextTick(()=>{this.salesChannel.languages.length=0,this.salesChannel.languages.push({id:this.salesChannel.languageId}),this.$forceUpdate()})}}}),n(524);let{Component:z,Context:P}=Shopware,{Criteria:x}=Shopware.Data;z.register("swag-paypal-pos-detail-runs",{template:'{% block swag_paypal_pos_detail_runs %}\n    <div class="swag-paypal-pos-detail-runs">\n\n        {% block swag_paypal_pos_detail_runs_card %}\n            <sw-card position-identifier="swag-paypal-pos-detail-runs"\n                     :title="$tc(\'swag-paypal-pos.detail.runs.title\')"\n                     :isLoading="isLoading">\n\n                {% block swag_paypal_pos_detail_runs_card_grid %}\n                    <template #grid>\n\n                        <sw-data-grid v-if="total > 0"\n                                      identifier="swag-paypal-pos-detail-runs"\n                                      :columns="columns"\n                                      :dataSource="runs"\n                                      :isLoading="isLoading || total === 0"\n                                      :showActions="true"\n                                      :showSelection="false"\n                                      :showSettings="true"\n                                      :allowColumnEdit="true"\n                                      :sortBy="sortBy"\n                                      :sortDirection="sortDirection"\n                                      :skeletonItemAmount="limit"\n                                      @column-sort="onSortColumn">\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_pagination %}\n                                <template #pagination>\n                                    <sw-pagination :limit="limit"\n                                                   :page="page"\n                                                   :total="total"\n                                                   :total-visible="7"\n                                                   @page-change="onPageChange">\n                                    </sw-pagination>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_other_grid_column_log %}\n                                <template #column-task="{ item }">\n                                    {{ $tc(`swag-paypal-pos.detail.runs.${item.task}Task`) }}\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_column_state %}\n                                <template #column-state="{ item }">\n\n                                    {% block swag_paypal_pos_detail_runs_card_grid_column_state_label %}\n                                        <sw-label appearance="pill"\n                                                  :variant="getLabelVariant(item)">\n                                            {{ $tc(getLabel(item)) }}\n                                        </sw-label>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_column_date %}\n                                <template #column-date="{ item }">\n\n                                    {% block swag_paypal_pos_detail_runs_card_grid_column_date_formatted %}\n                                        {{ dateFilter(item.finishedAt, {\n                                            hour: \'2-digit\',\n                                            minute: \'2-digit\',\n                                            day: \'2-digit\',\n                                            month: \'2-digit\',\n                                            year: \'2-digit\'\n                                        }) }}\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_actions %}\n                                <template #actions="{ item }">\n\n                                    {% block swag_paypal_pos_detail_runs_card_grid_actions_details %}\n                                        <sw-context-menu-item :disabled="item.logs.length <= 0"\n                                                              @click="onShowModal(item.id)">\n                                            {{ $tc(\'swag-paypal-pos.detail.runs.actions.showDetails\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                        </sw-data-grid>\n                    </template>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_runs_card_empty_state %}\n                    <template #default>\n                        <sw-empty-state v-if="total < 1"\n                                        class="swag-paypal-pos-detail-runs__empty-state"\n                                        :title="$tc(\'swag-paypal-pos.detail.runs.emptyState.title\')"\n                                        :subline="$tc(\'swag-paypal-pos.detail.runs.emptyState.message\')">\n                        </sw-empty-state>\n                    </template>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_runs_card_toolbar %}\n                    <template #toolbar v-if="total > 0">\n\n                        {% block swag_paypal_pos_detail_runs_card_toolbar_container %}\n                            <sw-container columns="1fr min-content"\n                                          align="center">\n\n                                {% block swag_paypal_pos_detail_runs_card_toolbar_container_text %}\n                                    <p>{{ $tc(\'swag-paypal-pos.detail.runs.toolbarText\') }}</p>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_detail_runs_card_toolbar_container_button %}\n                                    <sw-button\n                                            :disabled="!acl.can(\'sales_channel.editor\')"\n                                            @click="onClearLogs">\n                                        {{ $tc(\'swag-paypal-pos.detail.cleanLog\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                            </sw-container>\n                        {% endblock %}\n\n                    </template>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_runs_log_modal %}\n            <sw-modal v-if="showModal"\n                      class="swag-paypal-pos-detail-runs__modal"\n                      :title="$tc(\'swag-paypal-pos.detail.runs.title\')"\n                      :isLoading="isLoading"\n                      variant="large"\n                      @modal-close="onCloseModal">\n\n                {% block swag_paypal_pos_detail_runs_log_modal_logs %}\n                    <swag-paypal-pos-detail-logs :runId="currentRunId"></swag-paypal-pos-detail-logs>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_runs_log_modal_footer %}\n                    <template #modal-footer>\n\n                        {% block swag_paypal_pos_detail_runs_log_modal_footer_close_modal_button %}\n                            <sw-button variant="primary"\n                                       @click="onCloseModal">\n                                {{ $tc(\'global.default.cancel\') }}\n                            </sw-button>\n                        {% endblock %}\n\n                    </template>\n                {% endblock %}\n\n            </sw-modal>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosApiService","repositoryFactory","acl"],mixins:[Shopware.Mixin.getByName("swag-paypal-pos-catch-error"),Shopware.Mixin.getByName("notification"),Shopware.Mixin.getByName("listing")],props:{salesChannel:{type:Object,required:!1,default:null}},data(){return{runs:[],limit:10,sortBy:"finishedAt",sortDirection:"DESC",isLoading:!1,isCleaningLog:!1,showModal:!1,currentRunId:""}},computed:{runRepository(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")},columns(){return[{property:"task",dataIndex:"task",label:"swag-paypal-pos.detail.runs.columns.task",sortable:!0},{property:"state",dataIndex:"logs.level",label:"swag-paypal-pos.detail.runs.columns.state",sortable:!0},{property:"date",dataIndex:"finishedAt",label:"swag-paypal-pos.detail.runs.columns.date",sortable:!0}]},dateFilter(){return Shopware.Filter.getByName("date")}},created(){this.createdComponent()},methods:{createdComponent(){this.$emit("buttons-update",[])},getListCriteria(){let a=new x(this.page,this.limit);a.addFilter(x.equals("salesChannelId",this.salesChannel.id)),a.addFilter(x.not("AND",[x.equals("status","in_progress")])),a.addAssociation("logs"),a.getAssociation("logs").limit=1,a.getAssociation("logs").addSorting(x.sort("level","DESC"));let e=this.getMainListingParams();return a.addSorting(x.sort(e.sortBy,e.sortDirection,e.naturalSorting)),a.addSorting(x.sort("finishedAt","DESC")),a},getList(){return null===this.salesChannel||null===this.salesChannel.id?Promise.resolve():(this.isLoading=!0,this.runRepository.search(this.getListCriteria(),P.api).then(a=>{this.runs=a,this.total=a.total,this.page=a.criteria.page,this.limit=a.criteria.limit,this.isLoading=!1}))},onShowModal(a){this.currentRunId=a,this.showModal=!0},onCloseModal(){this.showModal=!1,this.currentRunId=""},onClearLogs(){return this.isLoading=!0,this.SwagPayPalPosApiService.startLogCleanup(this.salesChannel.id).then(()=>(this.$emit("run-update"),this.getList())).catch(a=>{this.catchError(null,a),this.getList()})},getLabelVariant(a){return"cancelled"===a.status?"info":"failed"===a.status?"danger":a.logs.length<=0?"success":a.logs[0].level>=400?"danger":a.logs[0].level>=300?"warning":a.logs[0].level>200?"info":"success"},getLabel(a){return"cancelled"===a.status?"swag-paypal-pos.detail.runs.states.aborted":"failed"===a.status?"swag-paypal-pos.detail.runs.states.failed":a.logs.length<=0?"swag-paypal-pos.detail.runs.states.successful":a.logs[0].level>200?"swag-paypal-pos.detail.runs.states.withWarnings":"swag-paypal-pos.detail.runs.states.successful"}}}),n(8629);let{Component:L,Context:I}=Shopware,{Criteria:T}=Shopware.Data;L.extend("swag-paypal-pos-wizard","sw-first-run-wizard-modal",{template:'{% block sw_first_run_wizard_modal %}\n    <div class="swag-paypal-pos-wizard">\n        <sw-modal v-if="showModal"\n                  class="swag-paypal-pos-wizard-modal"\n                  position-identifier="swag-paypal-pos-wizard-modal"\n                  :title="title"\n                  :variant="variant"\n                  @modal-close="onCloseModal">\n\n            {% block swag_paypal_pos_wizard_modal_content %}\n                <div class="swag-paypal-pos-wizard__modal-content">\n                    <sw-container class="swag-paypal-pos-wizard__columns"\n                                  :class="{ \'swag-paypal-pos-wizard__columns--two\': showSteps }">\n\n                        {% block swag_paypal_pos_wizard_modal_content_steps %}\n                            <div v-if="showSteps"\n                                 class="swag-paypal-pos-wizard__steps">\n                                <sw-step-display :initialItemVariants="stepInitialItemVariants"\n                                                 :itemIndex="stepIndex"\n                                                 :itemVariant="stepVariant">\n                                    <sw-step-item v-for="pageName in displayStepperPages"\n                                                  :key="pageName">\n                                        {{ $tc(`swag-paypal-pos.wizard.stepItemTitle.${pageName}`) }}\n                                    </sw-step-item>\n                                </sw-step-display>\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_wizard_modal_content_page %}\n                            <div class="swag-paypal-pos-wizard__page">\n                                    <router-view\n                                        v-slot="{ Component }"\n                                    >\n                                        <component\n                                            :is="Component"\n                                            :salesChannel="salesChannel"\n                                            :cloneSalesChannelId="cloneSalesChannelId"\n                                            :saveSalesChannel="save"\n                                            :isLoading="isLoading"\n                                            @buttons-update="updateButtons"\n                                            @frw-set-title="setTitle"\n                                            @frw-finish="onFinishWizard"\n                                            @toggle-loading="toggleLoading"\n                                            @recreate-sales-channel="createNewSalesChannel"\n                                            @update-clone-sales-channel="updateCloneSalesChannel"\n                                        />\n                                    </router-view>\n                            </div>\n                        {% endblock %}\n                    </sw-container>\n                </div>\n            {% endblock %}\n\n            {% block swag_paypal_pos_wizard_modal_footer %}\n                <template #modal-footer>\n                    <div class="swag-paypal-pos-wizard__footer">\n\n                        {% block swag_paypal_pos_wizard_modal_footer_left %}\n                            <div class="footer-left">\n                                <sw-button v-for="button in buttons.left"\n                                           size="small"\n                                           :key="button.action"\n                                           :disabled="button.disabled"\n                                           :isLoading="isLoading"\n                                           :variant="button.variant"\n                                           @click="onButtonClick(button.action)">\n                                    {{ button.label }}\n                                </sw-button>\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_wizard_modal_footer_right %}\n                            <div class="footer-right">\n                                <sw-button v-for="button in buttons.right"\n                                           size="small"\n                                           :key="button.action"\n                                           :disabled="button.disabled"\n                                           :isLoading="isLoading"\n                                           :variant="button.variant"\n                                           @click="onButtonClick(button.action)">\n                                    {{ button.label }}\n                                </sw-button>\n                            </div>\n                        {% endblock %}\n                        </div>\n                </template>\n            {% endblock %}\n        </sw-modal>\n    </div>\n{% endblock %}\n\n',inject:["SwagPayPalPosApiService","SwagPayPalPosSettingApiService","SwagPayPalPosWebhookRegisterService","salesChannelService","repositoryFactory"],mixins:[Shopware.Mixin.getByName("swag-paypal-pos-catch-error"),Shopware.Mixin.getByName("notification")],data(){return{showModal:!0,isLoading:!1,salesChannel:{},cloneSalesChannelId:null,stepperPages:["connection","connectionSuccess","connectionDisconnect","customization","productSelection","syncLibrary","syncPrices","finish"],stepper:{},currentStep:{}}},metaInfo(){return{title:this.wizardTitle}},computed:{displayStepperPages(){return this.stepperPages.filter(a=>"connectionDisconnect"!==a)},stepInitialItemVariants(){let a=this.stepperPages.length,{navigationIndex:e}=this.currentStep,n=[];for(let t=1;t<=a;t+=1)t<e?n.push("success"):t===e?n.push("info"):n.push("disabled");return n},paypalPosSalesChannelRepository(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel")},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},salesChannelCriteria(){return new T(1,500).addAssociation(g.m7).addAssociation("countries").addAssociation("currencies").addAssociation("domains").addAssociation("languages")},wizardTitle(){return[this.$tc("global.sw-admin-menu.textShopwareAdmin"),this.$tc("swag-paypal-pos.general.moduleTitle"),this.title].reverse().join(" | ")}},watch:{$route(a){this.handleRouteUpdate(a)}},mounted(){this.mountedComponent()},methods:{handleRouteUpdate(a){let e=a.name.replace("swag.paypal.pos.wizard.","");this.currentStep=this.stepper[e]},createdComponent(){if(this.generateStepper(),this.$route.params.id){this.loadSalesChannel();return}this.createNewSalesChannel()},mountedComponent(){let a=this.$route.name.replace("swag.paypal.pos.wizard.","");this.currentStep=this.stepper[a]},generateStepper(){let a=1;this.stepper=this.stepperPages.reduce((e,n)=>("connectionDisconnect"===n&&(a-=1),e[n]={name:`swag.paypal.pos.wizard.${n}`,variant:"large",navigationIndex:a},1===a&&(this.currentStep=e[n]),a+=1,e),{})},onCloseModal(){if(!this.salesChannel._isNew&&(this.$route.params.id||this.salesChannel.id)){this.routeToDetailOverview();return}this.routeToDashboard()},onFinishWizard(){this.routeToDetailOverview(!0)},routeToDashboard(){this.showModal=!1,this.$nextTick(()=>{this.$router.push({name:"sw.dashboard.index"})})},routeToDetailOverview(a=!1){this.showModal=!1,this.save(a).then(()=>{a&&this.SwagPayPalPosApiService.startCompleteSync(this.salesChannel.id),this.$router.push({name:"swag.paypal.pos.detail.overview",params:{id:this.salesChannel.id}})})},save(a=!1,e=!1){return a&&(this.salesChannel.active=!0),this.salesChannelRepository.save(this.salesChannel,I.api).then(async()=>{this.isLoading=!1,this.isSaveSuccessful=!0,this.isNewEntity=!1,this.$root.$emit("sales-channel-change"),await this.loadSalesChannel(),this.cloneProductVisibility(),this.registerWebhook(e)}).catch(()=>{this.isLoading=!1,this.createNotificationError({message:this.$tc("sw-sales-channel.detail.messageSaveError",0,{name:this.salesChannel.name||this.placeholder(this.salesChannel,"name")})})})},registerWebhook(a=!1){let e=this.SwagPayPalPosWebhookRegisterService.registerWebhook(this.salesChannel.id);return a?e:e.catch(this.catchError.bind(this,"swag-paypal-pos.messageWebhookRegisterError"))},cloneProductVisibility(){null!==this.cloneSalesChannelId&&this.SwagPayPalPosSettingApiService.cloneProductVisibility(this.cloneSalesChannelId,this.salesChannel.id).catch(a=>{a.response.data&&a.response.data.errors&&this.createNotificationError({message:this.$tc("swag-paypal-pos.messageCloneError")})})},createNewSalesChannel(){I.api.languageId!==I.api.systemLanguageId&&(I.api.languageId=I.api.systemLanguageId),this.previousApiKey=null,this.salesChannel=this.salesChannelRepository.create(I.api),this.salesChannel.typeId=g.c8,this.salesChannel.name=this.$tc("swag-paypal-pos.wizard.salesChannelPrototypeName"),this.salesChannel.active=!1,this.salesChannel.extensions.paypalPosSalesChannel=this.paypalPosSalesChannelRepository.create(I.api),Object.assign(this.salesChannel.extensions.paypalPosSalesChannel,{mediaDomain:"",apiKey:"",imageDomain:"",productStreamId:null,syncPrices:!0,replace:0}),this.salesChannelService.generateKey().then(a=>{this.salesChannel.accessKey=a.accessKey}).catch(()=>{this.createNotificationError({message:this.$tc("sw-sales-channel.detail.messageAPIError")})})},loadSalesChannel(){let a=this.$route.params.id||this.salesChannel.id;return a?(this.isLoading=!0,this.salesChannelRepository.get(a,Shopware.Context.api,this.salesChannelCriteria).then(a=>{this.salesChannel=a,this.previousApiKey=a.extensions.paypalPosSalesChannel.apiKey,this.isLoading=!1})):new Promise(a=>{a()})},updateCloneSalesChannel(a){this.cloneSalesChannelId=a},toggleLoading(a){this.isLoading=a}}}),n(433);let{Component:R}=Shopware;R.register("swag-paypal-pos-wizard-connection",{template:'{% block swag_paypal_pos_wizard_connection %}\n    <div class="swag-paypal-pos-wizard-connection">\n\n        {% block swag_paypal_pos_wizard_connection_headline %}\n            <div class="swag-paypal-pos-wizard-connection__headline">\n                {{ $tc(\'swag-paypal-pos.wizard.connection.headerConnect\') }}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_apikey %}\n            <sw-password-field\n                    v-model:value="salesChannel.extensions.paypalPosSalesChannel.apiKey"\n                    class="swag-paypal-pos-wizard-connection__apikey-field"\n                    required\n                    :label="$tc(\'swag-paypal-pos.authentication.labelApiKey\')"\n                    :placeholder="$tc(\'swag-paypal-pos.authentication.placeholderApiKey\')"\n                    @update:value="forceUpdate">\n                <template #suffix>\n\n                    {% block swag_paypal_pos_wizard_connection_apikey_suffix %}\n                        <sw-icon name="regular-low-vision"\n                                 class="swag-paypal-pos-wizard-connection__apikey-suffix"\n                                 size="22px">\n                        </sw-icon>\n                    {% endblock %}\n                </template>\n            </sw-password-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_apikey_description %}\n            <div class="swag-paypal-pos-wizard-connection__apikey-description">\n\n                {% block swag_paypal_pos_wizard_connection_apikey_description_text %}\n                    <div class="swag-paypal-pos-wizard-connection__apikey-description-text">\n                        {{ $tc(\'swag-paypal-pos.authentication.apiKeyDescription\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_apikey_description_link %}\n                    <sw-external-link :href="apiKeyUrl"\n                                      class="swag-paypal-pos-wizard-connection__apikey-description-link">\n\n                        {% block swag_paypal_pos_wizard_connection_apikey_description_link_text %}\n                            {{ $tc(\'swag-paypal-pos.authentication.buttonGenerateKey\') }}\n                        {% endblock %}\n                    </sw-external-link>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_header_new_customer %}\n            <div class="swag-paypal-pos-wizard-connection__new-customer-headline">\n                {{ $tc(\'swag-paypal-pos.wizard.connection.headerNewCustomer\') }}\n            </div>\n        {% endblock %}\n\n\n        {% block swag_paypal_pos_wizard_connection_new_customer %}\n            <sw-card position-identifier="swag-paypal-pos-wizard-connection-new-customer"\n                     :isLoading="isConnecting">\n                <sw-container\n                        class="swag-paypal-pos-wizard-connection__new-customer-container"\n                        columns="1fr 1fr"\n                        align="center"\n                        gap="300px">\n\n                    {% block swag_paypal_pos_wizard_connection_new_customer_image %}\n                        <img class="swag-paypal-pos-wizard-connection__pos-logo"\n                             :src="assetFilter(\'swagpaypal/static/img/paypal-pos-logo-full.png\')"\n                             alt="Zettle logo">\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_wizard_connection_new_customer_button %}\n                        <sw-button class="swag-paypal-pos-wizard-connection__pos-link"\n                                   variant="ghost"\n                                   size="small"\n                                   :link="$tc(\'swag-paypal-pos.wizard.connection.buttonCreateAccountLink\')">\n\n                            {% block swag_paypal_pos_wizard_connection_new_customer_button_text %}\n                                <span class="swag-paypal-pos-wizard-connection__pos-link-text">\n                                    {{ $tc(\'swag-paypal-pos.wizard.connection.buttonCreateAccount\') }}\n                                </span>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_new_customer_button_icon %}\n                                <sw-icon name="regular-external-link-s"\n                                         class="swag-paypal-pos-wizard-connection__pos-link-icon"\n                                         size="10px">\n                                </sw-icon>\n                            {% endblock %}\n                        </sw-button>\n                    {% endblock %}\n                </sw-container>\n            </sw-card>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosSettingApiService"],mixins:[Shopware.Mixin.getByName("notification"),Shopware.Mixin.getByName("swag-paypal-pos-catch-error")],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},isLoading:{type:Boolean,required:!1,default:!1}},data(){return{isConnecting:!1,apiKeyUrl:this.SwagPayPalPosSettingApiService.generateApiUrl()}},watch:{"salesChannel.extensions.paypalPosSalesChannel.apiKey"(a){a&&this.updateButtons()}},computed:{assetFilter(){return Shopware.Filter.getByName("asset")}},created(){this.createdComponent()},methods:{createdComponent(){this.updateButtons(),this.setTitle()},setTitle(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.connection.modalTitle"))},updateButtons(){let a=[{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToConnectionSuccess,disabled:this.isLoading||!this.salesChannel.extensions.paypalPosSalesChannel.apiKey}];this.$emit("buttons-update",a)},routeToConnectionSuccess(){this.toggleLoadingState(!0);let a=this.salesChannel.extensions.paypalPosSalesChannel.apiKey;this.SwagPayPalPosSettingApiService.validateApiCredentials(a).then(a=>{!0===a.credentialsValid&&(this.toggleLoadingState(!1),this.$router.push({name:"swag.paypal.pos.wizard.connectionSuccess"}))}).catch(this.catchError.bind(this,"swag-paypal-pos.authentication.messageTestError")).finally(()=>{this.toggleLoadingState(!1)})},forceUpdate(){this.$forceUpdate(),this.updateButtons()},toggleLoadingState(a){this.isConnecting=a,this.$emit("toggle-loading",a)}}}),n(3126);let{Component:A,Context:B}=Shopware;A.register("swag-paypal-pos-wizard-connection-success",{template:'{% block swag_paypal_pos_wizard_connection_success %}\n    <div class="swag-paypal-pos-wizard-connection-success">\n\n        {% block swag_paypal_pos_wizard_connection_success_headline_content %}\n            <div class="swag-paypal-pos-wizard-connection-success__content">\n\n                {% block swag_paypal_pos_wizard_connection_success_icon %}\n                    <div class="swag-paypal-pos-wizard-connection-success__icon-wrapper">\n                        <sw-icon class="swag-paypal-pos-wizard-connection-success__icon"\n                                 name="regular-thumbs-up"\n                                 size="80px"\n                                 color="#37D046">\n                        </sw-icon>\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_success_headline %}\n                    <div class="swag-paypal-pos-wizard-connection-success__headline">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.headline\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_success_info %}\n                    <div class="swag-paypal-pos-wizard-connection-success__info">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.info\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_success_user %}\n                    <sw-card class="swag-paypal-pos-wizard-connection-success__user"\n                             position-identifier="swag-paypal-pos-wizard-connection-success-user"\n                             :isLoading="isFetchingInformation">\n                        <sw-container class="swag-paypal-pos-wizard-connection-success__user-container"\n                                      columns="30px auto 150px"\n                                      align="center"\n                                      gap="30px">\n\n                            {% block swag_paypal_pos_wizard_connection_success_user_avatar %}\n                                <sw-avatar\n                                        class="swag-paypal-pos-wizard-connection-success__user-avatar"\n                                        size="40px"\n                                        :firstName="posUser.firstName"\n                                        :lastName="posUser.lastName">\n                                </sw-avatar>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_success_user_information %}\n                                <div class="swag-paypal-pos-wizard-connection-success__user-info">\n\n                                    {% block swag_paypal_pos_wizard_connection_success_user_information_real %}\n                                        <div class="swag-paypal-pos-wizard-connection-success__user-info-name">\n                                            {{ posUser.fullName }}\n                                        </div>\n                                        <div class="swag-paypal-pos-wizard-connection-success__user-info-mail">\n                                            {{ posUser.mail }}\n                                        </div>\n                                    {% endblock %}\n                                </div>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_success_user_disconnect_button %}\n                                <sw-button class="swag-paypal-pos-wizard-connection-success__user-disconnect"\n                                           variant="ghost"\n                                           size="small"\n                                           @click="onDisconnect">\n                                    {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.disconnectButton\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </sw-container>\n                    </sw-card>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_success_disclaimer %}\n            <div class="swag-paypal-pos-wizard-connection-success__disclaimer">\n                {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.disclaimer\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["repositoryFactory","SwagPayPalPosSettingApiService"],mixin:["placeholder"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data(){return{posData:null,isFetchingInformation:!0}},computed:{posUser(){if(this.isFetchingInformation){let a=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeFirstName"),e=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeLastName");return{firstName:a,lastName:e,fullName:`${a} ${e}`,mail:this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeMail")}}let a=this.posData.merchantInformation.name.split(" ");return{firstName:a[0],lastName:a[a.length-1],fullName:this.posData.merchantInformation.name,mail:this.posData.merchantInformation.contactEmail}}},created(){this.createdComponent()},methods:{createdComponent(){return this.isFetchingInformation=!0,this.updateButtons(),this.setTitle(),this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel,!0).then(a=>(this.posData=a,null===this.salesChannel.languageId&&(this.salesChannel.languageId=B.api.systemLanguageId,this.salesChannel.languages.push({id:B.api.systemLanguageId})),this.saveSalesChannel(!1,!0))).finally(()=>{this.isFetchingInformation=!1,this.updateButtons()})},setTitle(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.connectionSuccess.modalTitle"))},updateButtons(){let a=[{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToCustomization,disabled:this.isFetchingInformation}];this.$emit("buttons-update",a)},routeToCustomization(){this.$router.push({name:"swag.paypal.pos.wizard.customization",params:{id:this.salesChannel.id}})},onDisconnect(){this.$router.push({name:"swag.paypal.pos.wizard.connectionDisconnect",params:{id:this.salesChannel.id}})},forceUpdate(){this.$forceUpdate(),this.updateButtons()}}}),n(4880);let{Component:F,Context:D}=Shopware;F.register("swag-paypal-pos-wizard-connection-disconnect",{template:'{% block swag_paypal_pos_wizard_connection_disconnect %}\n    <div class="swag-paypal-pos-wizard-connection-disconnect">\n\n        {% block swag_paypal_pos_wizard_connection_disconnect_headline_content %}\n            <div class="swag-paypal-pos-wizard-connection-disconnect__content">\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_icon %}\n                    <div class="swag-paypal-pos-wizard-connection-disconnect__icon-wrapper">\n                        <sw-icon class="swag-paypal-pos-wizard-connection-disconnect__icon"\n                                 name="regular-exclamation-triangle"\n                                 size="80px"\n                                 color="#de294c">\n                        </sw-icon>\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_headline %}\n                    <div class="swag-paypal-pos-wizard-connection-disconnect__headline">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionDisconnect.headline\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_info %}\n                    <div class="swag-paypal-pos-wizard-connection-disconnect__info">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionDisconnect.info\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_user %}\n                    <sw-card class="swag-paypal-pos-wizard-connection-disconnect__user"\n                             position-identifier="swag-paypal-pos-wizard-connection-disconnect-user"\n                             :isLoading="isFetchingInformation">\n                        <sw-container class="swag-paypal-pos-wizard-connection-disconnect__user-container"\n                                      columns="30px auto 150px"\n                                      align="center"\n                                      gap="30px">\n\n                            {% block swag_paypal_pos_wizard_connection_disconnect_user_avatar %}\n                                <sw-avatar\n                                    class="swag-paypal-pos-wizard-connection-disconnect__user-avatar"\n                                    size="40px"\n                                    :firstName="posUser.firstName"\n                                    :lastName="posUser.lastName">\n                                </sw-avatar>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_disconnect_user_information %}\n                                <div class="swag-paypal-pos-wizard-connection-disconnect__user-info">\n\n                                    {% block swag_paypal_pos_wizard_connection_disconnect_user_information_real %}\n                                        <div class="swag-paypal-pos-wizard-connection-disconnect__user-info-name">\n                                            {{ posUser.fullName }}\n                                        </div>\n                                        <div class="swag-paypal-pos-wizard-connection-disconnect__user-info-mail">\n                                            {{ posUser.mail }}\n                                        </div>\n                                    {% endblock %}\n                                </div>\n                            {% endblock %}\n                        </sw-container>\n                    </sw-card>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["repositoryFactory","SwagPayPalPosSettingApiService"],mixin:[Shopware.Mixin.getByName("placeholder"),Shopware.Mixin.getByName("notification")],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data(){return{posData:null,isFetchingInformation:!0}},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},posUser(){if(this.isFetchingInformation){let a=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeFirstName"),e=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeLastName");return{firstName:a,lastName:e,fullName:`${a} ${e}`,mail:this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeMail")}}let a=this.posData.merchantInformation.name.split(" ");return{firstName:a[0],lastName:a[a.length-1],fullName:this.posData.merchantInformation.name,mail:this.posData.merchantInformation.contactEmail}}},created(){this.createdComponent()},methods:{createdComponent(){this.isFetchingInformation=!0,this.updateButtons(),this.setTitle(),this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel,!0).then(a=>{this.posData=a}).finally(()=>{this.isFetchingInformation=!1,this.updateButtons()})},setTitle(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.connectionDisconnect.modalTitle"))},updateButtons(){let a=[{key:"cancel",label:this.$tc("global.default.cancel"),position:"right",action:this.routeBackToConnectionSuccess,disabled:!1},{key:"next",label:this.$tc("swag-paypal-pos.wizard.connectionDisconnect.disconnectButton"),position:"right",variant:"danger",action:this.onDisconnect,disabled:this.isFetchingInformation}];this.$emit("buttons-update",a)},routeBackToConnectionSuccess(){this.$router.push({name:"swag.paypal.pos.wizard.connectionSuccess",params:{id:this.salesChannel.id}})},onDisconnect(){this.salesChannelRepository.delete(this.salesChannel.id,D.api).then(()=>{this.$root.$emit("sales-channel-change"),this.$emit("recreate-sales-channel"),this.forceUpdate(),this.$router.push({name:"swag.paypal.pos.wizard.connection"})}).catch(()=>{this.createNotificationError({message:this.$tc("swag-paypal-pos.wizard.connectionDisconnect.disconnectErrorMessage")})})},forceUpdate(){this.$forceUpdate(),this.updateButtons()}}}),n(4612);let{Component:N}=Shopware,{EntityCollection:M}=Shopware.Data;N.register("swag-paypal-pos-wizard-customization",{template:'{% block swag_paypal_pos_wizard_customization %}\n    <div v-if="!isLoading"\n         class="swag-paypal-pos-wizard-customization">\n\n        {% block swag_paypal_pos_wizard_customization_name %}\n            <sw-text-field\n                v-model:value="salesChannel.name"\n                class="swag-paypal-pos-wizard-customization__name-field"\n                validation="required"\n                required\n                :label="$tc(\'swag-paypal-pos.wizard.customization.salesChannelLabel\')"\n                :placeholder="$tc(\'sw-sales-channel.detail.placeholderName\')"\n                @update:value="forceUpdate">\n            </sw-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_customization_language %}\n            <sw-entity-single-select\n                v-model:value="salesChannel.languageId"\n                entity="language"\n                required\n                :label="$tc(\'global.entities.language\')"\n                @update:value="changeLanguage">\n            </sw-entity-single-select>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_customization_media_domain %}\n            <sw-url-field\n                v-model:value="salesChannel.extensions.paypalPosSalesChannel.mediaDomain"\n                class="swag-paypal-pos-wizard-customization__domain-field"\n                required\n                :label="$tc(\'swag-paypal-pos.wizard.customization.labelDomain\')"\n                :placeholder="$tc(\'swag-paypal-pos.wizard.customization.placeholderDomain\')"\n                :value="salesChannel.extensions.paypalPosSalesChannel.mediaDomain"\n                @update:value="forceUpdate">\n            </sw-url-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_success_disclaimer %}\n            <div class="swag-paypal-pos-wizard-customization__subtitle">\n                {{ $tc(\'swag-paypal-pos.wizard.customization.subtitle\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["repositoryFactory"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0},isLoading:{type:Boolean,required:!1,default:!1}},computed:{languageRepository(){return this.repositoryFactory.create("language")}},watch:{isLoading(a){a||this.updateButtons()}},created(){this.createdComponent()},methods:{createdComponent(){this.updateButtons(),this.setTitle(),this.changeLanguage()},setTitle(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.customization.modalTitle"))},updateButtons(){let a=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToConnectionSuccess,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToProductSelection,disabled:this.nextButtonDisabled()}];this.$emit("buttons-update",a)},nextButtonDisabled(){return this.isLoading||!this.salesChannel.name||!this.salesChannel.languageId||!this.salesChannel.extensions.paypalPosSalesChannel.mediaDomain},routeBackToConnectionSuccess(){this.$router.push({name:"swag.paypal.pos.wizard.connectionSuccess",params:{id:this.salesChannel.id}})},routeToProductSelection(){this.$router.push({name:"swag.paypal.pos.wizard.productSelection",params:{id:this.salesChannel.id}})},forceUpdate(){this.$forceUpdate(),this.$nextTick().then(()=>{this.updateButtons()})},changeLanguage(){this.salesChannel.languages=new M("language","language",Shopware.Context.api),this.salesChannel.languages.push({id:this.salesChannel.languageId}),this.$forceUpdate()},toggleLoadingState(a){this.isConnecting=a,this.$emit("toggle-loading",a)}}});let{Component:E}=Shopware,{Criteria:q}=Shopware.Data;E.register("swag-paypal-pos-wizard-product-selection",{template:'{% block swag_paypal_pos_wizard_product_selection %}\n    <div class="swag-paypal-pos-wizard-product-selection">\n\n        {% block swag_paypal_pos_wizard_product_selection_info %}\n            <p class="swag-paypal-pos-wizard-product-selection__info">\n                {{ $tc(\'swag-paypal-pos.wizard.productSelection.info\') }}\n            </p>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_product_selection_sales_channel_toggle %}\n            <sw-switch-field\n                    v-model:value="hasClone"\n                    class="swag-paypal-pos-wizard-product-selection__clone-switch"\n                    bordered\n                    :label="$tc(\'swag-paypal-pos.wizard.productSelection.labelToggle\')"\n                    @update:value="updateClone">\n            </sw-switch-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_product_selection_sales_channel_select %}\n            <sw-entity-single-select\n                    v-model:value="localCloneSalesChannelId"\n                    class="swag-paypal-pos-wizard-product-selection__saleschannel-select"\n                    entity="sales_channel"\n                    :criteria="salesChannelCriteria"\n                    :disabled="!hasClone"\n                    :label="$tc(\'swag-paypal-pos.wizard.productSelection.labelSelect\')"\n                    @update:value="forceUpdate">\n            </sw-entity-single-select>\n        {% endblock %}\n    </div>\n{% endblock %}\n',props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data(){return{manualSalesChannel:!1,hasClone:!1}},computed:{localCloneSalesChannelId:{get(){return this.updateButtons(),this.cloneSalesChannelId},set(a){this.$emit("update-clone-sales-channel",a)}},salesChannelCriteria(){let a=new q(1,500);return a.addFilter(q.not("and",[q.equals("id",this.salesChannel.id)])),a}},created(){this.createdComponent()},methods:{createdComponent(){this.updateButtons(),this.setTitle()},setTitle(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.productSelection.modalTitle"))},updateButtons(){let a=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToCustomization,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToSyncLibrary,disabled:!1}];this.$emit("buttons-update",a)},routeBackToCustomization(){this.$router.push({name:"swag.paypal.pos.wizard.customization",params:{id:this.salesChannel.id}})},routeToSyncLibrary(){this.$router.push({name:"swag.paypal.pos.wizard.syncLibrary",params:{id:this.salesChannel.id}})},updateClone(){this.$emit("update-clone-sales-channel",null),this.forceUpdate()},forceUpdate(){this.$forceUpdate(),this.updateButtons()},toggleLoadingState(a){this.isConnecting=a,this.$emit("toggle-loading",a)}}}),n(9679);let{Component:U}=Shopware;U.register("swag-paypal-pos-wizard-sync-prices",{template:'{% block swag_paypal_pos_wizard_sync_prices %}\n    <div class="swag-paypal-pos-wizard-sync-prices">\n\n        {% block swag_paypal_pos_wizard_sync_prices_header %}\n            <div class="swag-paypal-pos-wizard-sync-prices__headline">\n                {{ $tc(\'swag-paypal-pos.wizard.syncPrices.header\') }}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_prices_description_input %}\n            <swag-paypal-pos-boolean-radio\n                v-model:value="salesChannel.extensions.paypalPosSalesChannel.syncPrices"\n                :label="$tc(\'swag-paypal-pos.wizard.syncPrices.description\')"\n                :optionTrue="optionTrue"\n                :optionFalse="optionFalse">\n            </swag-paypal-pos-boolean-radio>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_prices_disclaimer %}\n            <div class="swag-paypal-pos-wizard-sync-prices__disclaimer">\n                {{ $tc(\'swag-paypal-pos.wizard.syncPrices.disclaimer\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},computed:{optionTrue(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueDescription")}},optionFalse(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseDescription")}}},created(){this.createdComponent()},methods:{createdComponent(){this.updateButtons(),this.setTitle()},setTitle(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.syncPrices.modalTitle"))},updateButtons(){let a=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToSyncLibrary,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToFinish,disabled:!1}];this.$emit("buttons-update",a)},routeBackToSyncLibrary(){this.$router.push({name:"swag.paypal.pos.wizard.syncLibrary",params:{id:this.salesChannel.id}})},routeToFinish(){this.$router.push({name:"swag.paypal.pos.wizard.finish",params:{id:this.salesChannel.id}})},forceUpdate(){this.$forceUpdate()},toggleLoadingState(a){this.isConnecting=a,this.$emit("toggle-loading",a)}}}),n(4106);let{Component:j}=Shopware;j.register("swag-paypal-pos-wizard-sync-library",{template:'{% block swag_paypal_pos_wizard_sync_library %}\n    <div class="swag-paypal-pos-wizard-sync-library">\n\n        {% block swag_paypal_pos_wizard_sync_library_header %}\n            <i18n class="swag-paypal-pos-wizard-sync-library__headline"\n                  path="swag-paypal-pos.wizard.syncLibrary.header"\n                  tag="div">\n                <template #shopwareProducts>\n                    <span>{{ $tc(\'swag-paypal-pos.wizard.syncLibrary.shopwareProducts\', shopwareProductsCount) }}</span>\n                </template>\n                <template #posProducts>\n                    <span>{{ $tc(\'swag-paypal-pos.wizard.syncLibrary.posProducts\', posProductsCount) }}</span>\n                </template>\n            </i18n>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_library_description_input %}\n            <sw-radio-field\n                v-model:value="salesChannel.extensions.paypalPosSalesChannel.replace"\n                class="swag-paypal-pos-boolean-radio"\n                :label="$tc(\'swag-paypal-pos.wizard.syncLibrary.description\')"\n                :options="options">\n            </sw-radio-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_library_disclaimer %}\n            <div class="swag-paypal-pos-wizard-sync-library__disclaimer">\n                {{ $tc(\'swag-paypal-pos.wizard.syncLibrary.disclaimer\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosSettingApiService"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data(){return{shopwareProductsCount:0,posProductsCount:0}},computed:{options(){return[{value:2,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyDescription")},{value:1,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeDescription")},{value:0,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotDescription")}]}},created(){this.createdComponent()},methods:{createdComponent(){this.updateButtons(),this.setTitle(),this.fetchProductCounts()},setTitle(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.syncLibrary.modalTitle"))},updateButtons(){let a=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToProductSelection,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToSyncPrices,disabled:!1}];this.$emit("buttons-update",a)},routeBackToProductSelection(){this.$router.push({name:"swag.paypal.pos.wizard.productSelection",params:{id:this.salesChannel.id}})},routeToSyncPrices(){this.$router.push({name:"swag.paypal.pos.wizard.syncPrices",params:{id:this.salesChannel.id}})},forceUpdate(){this.$forceUpdate()},toggleLoadingState(a){this.isConnecting=a,this.$emit("toggle-loading",a)},fetchProductCounts(){this.toggleLoadingState(!0),this.SwagPayPalPosSettingApiService.getProductCount(this.salesChannel.id,this.cloneSalesChannelId).then(a=>{this.shopwareProductsCount=a.localCount,this.posProductsCount=a.remoteCount}).finally(()=>{this.toggleLoadingState(!1)})}}}),n(1170);let{Component:O}=Shopware;O.register("swag-paypal-pos-wizard-finish",{template:'{% block swag_paypal_pos_wizard_finish %}\n    <div class="swag-paypal-pos-wizard-finish">\n\n        {% block swag_paypal_pos_wizard_finish_content %}\n            <div class="swag-paypal-pos-wizard-finish__content">\n\n                {% block swag_paypal_pos_wizard_finish_content_icon %}\n                    <div class="swag-paypal-pos-wizard-finish__icon-wrapper">\n                        <sw-icon class="swag-paypal-pos-wizard-finish__icon"\n                                 name="regular-checkmark"\n                                 size="80px"\n                                 color="#37D046">\n                        </sw-icon>\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_finish_content_header %}\n                    <div class="swag-paypal-pos-wizard-finish__content-header">\n                        {{ $tc(\'swag-paypal-pos.wizard.finish.header\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_finish_content_description %}\n                    <div class="swag-paypal-pos-wizard-finish__content-description">\n                        <p class="swag-paypal-pos-wizard-finish__first-paragraph">\n                            {{ $tc(\'swag-paypal-pos.wizard.finish.firstParagraph\') }}\n                        </p>\n\n                        <p class="swag-paypal-pos-wizard-finish__second-paragraph">\n                            {{ $tc(\'swag-paypal-pos.wizard.finish.secondParagraph\') }}\n                        </p>\n                    </div>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosApiService"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null}},created(){this.createdComponent()},methods:{createdComponent(){this.updateButtons(),this.setTitle()},setTitle(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.finish.modalTitle"))},updateButtons(){let a=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToSyncPrices,disabled:!1},{key:"finish",label:this.$tc("sw-first-run-wizard.general.buttonFinish"),position:"right",variant:"primary",action:this.onFinish,disabled:!1}];this.$emit("buttons-update",a)},routeBackToSyncPrices(){this.$router.push({name:"swag.paypal.pos.wizard.syncPrices",params:{id:this.salesChannel.id}})},onFinish(){this.$emit("frw-finish")}}});let{Module:K}=Shopware;K.register("swag-paypal-pos",{type:"plugin",name:"SwagPayPalPos",title:"swag-paypal.general.mainMenuItemGeneral",description:"swag-paypal.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#9AA8B5",icon:"regular-sync",routes:{detail:{component:"swag-paypal-pos",path:":id/detail",redirect:{name:"swag.paypal.pos.detail.overview"},meta:{privilege:"sales_channel.viewer"},children:{overview:{component:"swag-paypal-pos-detail-overview",path:"overview",meta:{privilege:"sales_channel.viewer"}},syncedProducts:{component:"swag-paypal-pos-detail-synced-products",path:"synced-products",meta:{privilege:"sales_channel.viewer"}},settings:{component:"swag-paypal-pos-detail-settings",path:"settings",meta:{privilege:"sales_channel.viewer"}},runs:{component:"swag-paypal-pos-detail-runs",path:"runs",meta:{privilege:"sales_channel.viewer"}}}},wizard:{component:"swag-paypal-pos-wizard",path:":id?/wizard",redirect:{name:"swag.paypal.pos.wizard.connection"},meta:{privilege:"sales_channel.creator"},children:{connection:{component:"swag-paypal-pos-wizard-connection",path:"connection",meta:{privilege:"sales_channel.creator"}},connectionSuccess:{component:"swag-paypal-pos-wizard-connection-success",path:"connection-success",meta:{privilege:"sales_channel.creator"}},connectionDisconnect:{component:"swag-paypal-pos-wizard-connection-disconnect",path:"connection-disconnect",meta:{privilege:"sales_channel.creator"}},customization:{component:"swag-paypal-pos-wizard-customization",path:"customization",meta:{privilege:"sales_channel.creator"}},productSelection:{component:"swag-paypal-pos-wizard-product-selection",path:"product-selection",meta:{privilege:"sales_channel.creator"}},syncPrices:{component:"swag-paypal-pos-wizard-sync-prices",path:"sync-prices",meta:{privilege:"sales_channel.creator"}},syncLibrary:{component:"swag-paypal-pos-wizard-sync-library",path:"sync-library",meta:{privilege:"sales_channel.creator"}},finish:{component:"swag-paypal-pos-wizard-finish",path:"finish",meta:{privilege:"sales_channel.creator"}}}}}})},8788:function(a,e,n){var t=n(4910);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("d06d7e22",t,!0,{})},253:function(a,e,n){var t=n(6134);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("594f6f58",t,!0,{})},863:function(a,e,n){var t=n(7768);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("0e0c2852",t,!0,{})},8873:function(a,e,n){var t=n(6186);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("cb6ad496",t,!0,{})},9794:function(a,e,n){var t=n(462);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("39f2a8ee",t,!0,{})},4518:function(a,e,n){var t=n(3786);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("026a9808",t,!0,{})},6646:function(a,e,n){var t=n(9356);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("00fd8981",t,!0,{})},524:function(a,e,n){var t=n(615);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("65a79a9c",t,!0,{})},6090:function(a,e,n){var t=n(4869);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("84a8de52",t,!0,{})},8780:function(a,e,n){var t=n(4849);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("77b803c6",t,!0,{})},6471:function(a,e,n){var t=n(4985);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("9e62e5ae",t,!0,{})},4880:function(a,e,n){var t=n(9056);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("55abf526",t,!0,{})},3126:function(a,e,n){var t=n(1701);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("4473a1b7",t,!0,{})},433:function(a,e,n){var t=n(2500);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("62a23199",t,!0,{})},4612:function(a,e,n){var t=n(5602);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("6600d384",t,!0,{})},1170:function(a,e,n){var t=n(7112);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("ffe4c7cc",t,!0,{})},4106:function(a,e,n){var t=n(4864);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("66dd6678",t,!0,{})},9679:function(a,e,n){var t=n(5208);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("21e85cd5",t,!0,{})},8629:function(a,e,n){var t=n(6030);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),n(5346).Z("9a56b578",t,!0,{})},5346:function(a,e,n){"use strict";function t(a,e){for(var n=[],t={},s=0;s<e.length;s++){var i=e[s],o=i[0],l={id:a+":"+s,css:i[1],media:i[2],sourceMap:i[3]};t[o]?t[o].parts.push(l):n.push(t[o]={id:o,parts:[l]})}return n}n.d(e,{Z:function(){return _}});var s="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!s)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},o=s&&(document.head||document.getElementsByTagName("head")[0]),l=null,p=0,c=!1,r=function(){},d=null,u="data-vue-ssr-id",g="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function _(a,e,n,s){c=n,d=s||{};var o=t(a,e);return h(o),function(e){for(var n=[],s=0;s<o.length;s++){var l=i[o[s].id];l.refs--,n.push(l)}e?h(o=t(a,e)):o=[];for(var s=0;s<n.length;s++){var l=n[s];if(0===l.refs){for(var p=0;p<l.parts.length;p++)l.parts[p]();delete i[l.id]}}}}function h(a){for(var e=0;e<a.length;e++){var n=a[e],t=i[n.id];if(t){t.refs++;for(var s=0;s<t.parts.length;s++)t.parts[s](n.parts[s]);for(;s<n.parts.length;s++)t.parts.push(y(n.parts[s]));t.parts.length>n.parts.length&&(t.parts.length=n.parts.length)}else{for(var o=[],s=0;s<n.parts.length;s++)o.push(y(n.parts[s]));i[n.id]={id:n.id,refs:1,parts:o}}}}function w(){var a=document.createElement("style");return a.type="text/css",o.appendChild(a),a}function y(a){var e,n,t=document.querySelector("style["+u+'~="'+a.id+'"]');if(t){if(c)return r;t.parentNode.removeChild(t)}if(g){var s=p++;e=b.bind(null,t=l||(l=w()),s,!1),n=b.bind(null,t,s,!0)}else e=v.bind(null,t=w()),n=function(){t.parentNode.removeChild(t)};return e(a),function(t){t?(t.css!==a.css||t.media!==a.media||t.sourceMap!==a.sourceMap)&&e(a=t):n()}}var m=function(){var a=[];return function(e,n){return a[e]=n,a.filter(Boolean).join("\n")}}();function b(a,e,n,t){var s=n?"":t.css;if(a.styleSheet)a.styleSheet.cssText=m(e,s);else{var i=document.createTextNode(s),o=a.childNodes;o[e]&&a.removeChild(o[e]),o.length?a.insertBefore(i,o[e]):a.appendChild(i)}}function v(a,e){var n=e.css,t=e.media,s=e.sourceMap;if(t&&a.setAttribute("media",t),d.ssrId&&a.setAttribute(u,e.id),s&&(n+="\n/*# sourceURL="+s.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),a.styleSheet)a.styleSheet.cssText=n;else{for(;a.firstChild;)a.removeChild(a.firstChild);a.appendChild(document.createTextNode(n))}}}}]);